2024-08-16 10:23:05,679:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:05,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:05,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:05,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:34,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:34,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:34,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:34,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 10:23:59,052:INFO:PyCaret ClassificationExperiment
2024-08-16 10:23:59,053:INFO:Logging name: clf-default-name
2024-08-16 10:23:59,053:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 10:23:59,053:INFO:version 3.3.2
2024-08-16 10:23:59,053:INFO:Initializing setup()
2024-08-16 10:23:59,053:INFO:self.USI: d483
2024-08-16 10:23:59,053:INFO:self._variable_keys: {'exp_name_log', 'data', 'fold_groups_param', 'is_multiclass', 'memory', 'y', '_ml_usecase', 'gpu_param', 'pipeline', 'USI', 'html_param', 'logging_param', 'idx', 'exp_id', 'X', 'seed', 'fold_generator', 'X_train', 'X_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fix_imbalance', 'target_param', 'y_test', 'n_jobs_param', 'log_plots_param', 'y_train', '_available_plots'}
2024-08-16 10:23:59,053:INFO:Checking environment
2024-08-16 10:23:59,053:INFO:python_version: 3.11.7
2024-08-16 10:23:59,053:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 10:23:59,053:INFO:machine: x86_64
2024-08-16 10:23:59,054:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 10:23:59,054:INFO:Memory: svmem(total=15531241472, available=11759558656, percent=24.3, used=3191345152, free=2784833536, active=5270736896, inactive=5744545792, buffers=4585021440, cached=4970041344, shared=239992832, slab=1401470976)
2024-08-16 10:23:59,055:INFO:Physical Core: 8
2024-08-16 10:23:59,055:INFO:Logical Core: 16
2024-08-16 10:23:59,055:INFO:Checking libraries
2024-08-16 10:23:59,055:INFO:System:
2024-08-16 10:23:59,055:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 10:23:59,055:INFO:executable: /opt/anaconda/bin/python
2024-08-16 10:23:59,055:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 10:23:59,055:INFO:PyCaret required dependencies:
2024-08-16 10:23:59,256:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:23:59,404:INFO:                 pip: 23.3.1
2024-08-16 10:23:59,404:INFO:          setuptools: 68.2.2
2024-08-16 10:23:59,404:INFO:             pycaret: 3.3.2
2024-08-16 10:23:59,404:INFO:             IPython: 8.20.0
2024-08-16 10:23:59,404:INFO:          ipywidgets: 7.6.5
2024-08-16 10:23:59,404:INFO:                tqdm: 4.65.0
2024-08-16 10:23:59,404:INFO:               numpy: 1.26.4
2024-08-16 10:23:59,404:INFO:              pandas: 2.1.4
2024-08-16 10:23:59,404:INFO:              jinja2: 3.1.3
2024-08-16 10:23:59,405:INFO:               scipy: 1.11.4
2024-08-16 10:23:59,405:INFO:              joblib: 1.2.0
2024-08-16 10:23:59,405:INFO:             sklearn: 1.2.2
2024-08-16 10:23:59,405:INFO:                pyod: 2.0.1
2024-08-16 10:23:59,405:INFO:            imblearn: 0.11.0
2024-08-16 10:23:59,405:INFO:   category_encoders: 2.6.3
2024-08-16 10:23:59,405:INFO:            lightgbm: 4.5.0
2024-08-16 10:23:59,405:INFO:               numba: 0.59.0
2024-08-16 10:23:59,405:INFO:            requests: 2.31.0
2024-08-16 10:23:59,405:INFO:          matplotlib: 3.8.0
2024-08-16 10:23:59,405:INFO:          scikitplot: 0.3.7
2024-08-16 10:23:59,405:INFO:         yellowbrick: 1.5
2024-08-16 10:23:59,405:INFO:              plotly: 5.9.0
2024-08-16 10:23:59,405:INFO:    plotly-resampler: Not installed
2024-08-16 10:23:59,405:INFO:             kaleido: 0.2.1
2024-08-16 10:23:59,405:INFO:           schemdraw: 0.15
2024-08-16 10:23:59,405:INFO:         statsmodels: 0.14.0
2024-08-16 10:23:59,405:INFO:              sktime: 0.26.0
2024-08-16 10:23:59,405:INFO:               tbats: 1.1.3
2024-08-16 10:23:59,405:INFO:            pmdarima: 2.0.4
2024-08-16 10:23:59,405:INFO:              psutil: 5.9.0
2024-08-16 10:23:59,405:INFO:          markupsafe: 2.1.3
2024-08-16 10:23:59,405:INFO:             pickle5: Not installed
2024-08-16 10:23:59,405:INFO:         cloudpickle: 2.2.1
2024-08-16 10:23:59,405:INFO:         deprecation: 2.1.0
2024-08-16 10:23:59,405:INFO:              xxhash: 3.4.1
2024-08-16 10:23:59,405:INFO:           wurlitzer: 3.0.2
2024-08-16 10:23:59,405:INFO:PyCaret optional dependencies:
2024-08-16 10:23:59,413:INFO:                shap: 0.46.0
2024-08-16 10:23:59,413:INFO:           interpret: Not installed
2024-08-16 10:23:59,413:INFO:                umap: 0.1.1
2024-08-16 10:23:59,413:INFO:     ydata_profiling: Not installed
2024-08-16 10:23:59,413:INFO:  explainerdashboard: Not installed
2024-08-16 10:23:59,413:INFO:             autoviz: Not installed
2024-08-16 10:23:59,413:INFO:           fairlearn: Not installed
2024-08-16 10:23:59,413:INFO:          deepchecks: Not installed
2024-08-16 10:23:59,413:INFO:             xgboost: Not installed
2024-08-16 10:23:59,413:INFO:            catboost: Not installed
2024-08-16 10:23:59,413:INFO:              kmodes: Not installed
2024-08-16 10:23:59,413:INFO:             mlxtend: Not installed
2024-08-16 10:23:59,413:INFO:       statsforecast: Not installed
2024-08-16 10:23:59,413:INFO:        tune_sklearn: Not installed
2024-08-16 10:23:59,413:INFO:                 ray: Not installed
2024-08-16 10:23:59,413:INFO:            hyperopt: Not installed
2024-08-16 10:23:59,413:INFO:              optuna: Not installed
2024-08-16 10:23:59,413:INFO:               skopt: Not installed
2024-08-16 10:23:59,413:INFO:              mlflow: Not installed
2024-08-16 10:23:59,413:INFO:              gradio: Not installed
2024-08-16 10:23:59,413:INFO:             fastapi: Not installed
2024-08-16 10:23:59,413:INFO:             uvicorn: Not installed
2024-08-16 10:23:59,413:INFO:              m2cgen: Not installed
2024-08-16 10:23:59,413:INFO:           evidently: Not installed
2024-08-16 10:23:59,413:INFO:               fugue: Not installed
2024-08-16 10:23:59,413:INFO:           streamlit: 1.30.0
2024-08-16 10:23:59,413:INFO:             prophet: Not installed
2024-08-16 10:23:59,413:INFO:None
2024-08-16 10:23:59,413:INFO:Set up data.
2024-08-16 10:24:10,850:INFO:PyCaret ClassificationExperiment
2024-08-16 10:24:10,850:INFO:Logging name: clf-default-name
2024-08-16 10:24:10,850:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 10:24:10,850:INFO:version 3.3.2
2024-08-16 10:24:10,850:INFO:Initializing setup()
2024-08-16 10:24:10,850:INFO:self.USI: db4a
2024-08-16 10:24:10,850:INFO:self._variable_keys: {'exp_name_log', 'data', 'fold_groups_param', 'is_multiclass', 'memory', 'y', '_ml_usecase', 'gpu_param', 'pipeline', 'USI', 'html_param', 'logging_param', 'idx', 'exp_id', 'X', 'seed', 'fold_generator', 'X_train', 'X_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fix_imbalance', 'target_param', 'y_test', 'n_jobs_param', 'log_plots_param', 'y_train', '_available_plots'}
2024-08-16 10:24:10,850:INFO:Checking environment
2024-08-16 10:24:10,850:INFO:python_version: 3.11.7
2024-08-16 10:24:10,850:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 10:24:10,850:INFO:machine: x86_64
2024-08-16 10:24:10,850:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 10:24:10,850:INFO:Memory: svmem(total=15531241472, available=11701862400, percent=24.7, used=3248812032, free=2710605824, active=5271748608, inactive=5810561024, buffers=4585578496, cached=4986245120, shared=240201728, slab=1403453440)
2024-08-16 10:24:10,851:INFO:Physical Core: 8
2024-08-16 10:24:10,851:INFO:Logical Core: 16
2024-08-16 10:24:10,851:INFO:Checking libraries
2024-08-16 10:24:10,851:INFO:System:
2024-08-16 10:24:10,851:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 10:24:10,851:INFO:executable: /opt/anaconda/bin/python
2024-08-16 10:24:10,851:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 10:24:10,851:INFO:PyCaret required dependencies:
2024-08-16 10:24:10,851:INFO:                 pip: 23.3.1
2024-08-16 10:24:10,851:INFO:          setuptools: 68.2.2
2024-08-16 10:24:10,851:INFO:             pycaret: 3.3.2
2024-08-16 10:24:10,851:INFO:             IPython: 8.20.0
2024-08-16 10:24:10,851:INFO:          ipywidgets: 7.6.5
2024-08-16 10:24:10,851:INFO:                tqdm: 4.65.0
2024-08-16 10:24:10,851:INFO:               numpy: 1.26.4
2024-08-16 10:24:10,851:INFO:              pandas: 2.1.4
2024-08-16 10:24:10,851:INFO:              jinja2: 3.1.3
2024-08-16 10:24:10,851:INFO:               scipy: 1.11.4
2024-08-16 10:24:10,851:INFO:              joblib: 1.2.0
2024-08-16 10:24:10,851:INFO:             sklearn: 1.2.2
2024-08-16 10:24:10,851:INFO:                pyod: 2.0.1
2024-08-16 10:24:10,851:INFO:            imblearn: 0.11.0
2024-08-16 10:24:10,851:INFO:   category_encoders: 2.6.3
2024-08-16 10:24:10,851:INFO:            lightgbm: 4.5.0
2024-08-16 10:24:10,851:INFO:               numba: 0.59.0
2024-08-16 10:24:10,851:INFO:            requests: 2.31.0
2024-08-16 10:24:10,851:INFO:          matplotlib: 3.8.0
2024-08-16 10:24:10,851:INFO:          scikitplot: 0.3.7
2024-08-16 10:24:10,851:INFO:         yellowbrick: 1.5
2024-08-16 10:24:10,851:INFO:              plotly: 5.9.0
2024-08-16 10:24:10,851:INFO:    plotly-resampler: Not installed
2024-08-16 10:24:10,851:INFO:             kaleido: 0.2.1
2024-08-16 10:24:10,851:INFO:           schemdraw: 0.15
2024-08-16 10:24:10,851:INFO:         statsmodels: 0.14.0
2024-08-16 10:24:10,851:INFO:              sktime: 0.26.0
2024-08-16 10:24:10,851:INFO:               tbats: 1.1.3
2024-08-16 10:24:10,851:INFO:            pmdarima: 2.0.4
2024-08-16 10:24:10,851:INFO:              psutil: 5.9.0
2024-08-16 10:24:10,851:INFO:          markupsafe: 2.1.3
2024-08-16 10:24:10,851:INFO:             pickle5: Not installed
2024-08-16 10:24:10,851:INFO:         cloudpickle: 2.2.1
2024-08-16 10:24:10,851:INFO:         deprecation: 2.1.0
2024-08-16 10:24:10,851:INFO:              xxhash: 3.4.1
2024-08-16 10:24:10,851:INFO:           wurlitzer: 3.0.2
2024-08-16 10:24:10,851:INFO:PyCaret optional dependencies:
2024-08-16 10:24:10,851:INFO:                shap: 0.46.0
2024-08-16 10:24:10,851:INFO:           interpret: Not installed
2024-08-16 10:24:10,851:INFO:                umap: 0.1.1
2024-08-16 10:24:10,851:INFO:     ydata_profiling: Not installed
2024-08-16 10:24:10,851:INFO:  explainerdashboard: Not installed
2024-08-16 10:24:10,851:INFO:             autoviz: Not installed
2024-08-16 10:24:10,851:INFO:           fairlearn: Not installed
2024-08-16 10:24:10,851:INFO:          deepchecks: Not installed
2024-08-16 10:24:10,851:INFO:             xgboost: Not installed
2024-08-16 10:24:10,851:INFO:            catboost: Not installed
2024-08-16 10:24:10,851:INFO:              kmodes: Not installed
2024-08-16 10:24:10,851:INFO:             mlxtend: Not installed
2024-08-16 10:24:10,851:INFO:       statsforecast: Not installed
2024-08-16 10:24:10,851:INFO:        tune_sklearn: Not installed
2024-08-16 10:24:10,851:INFO:                 ray: Not installed
2024-08-16 10:24:10,851:INFO:            hyperopt: Not installed
2024-08-16 10:24:10,851:INFO:              optuna: Not installed
2024-08-16 10:24:10,851:INFO:               skopt: Not installed
2024-08-16 10:24:10,851:INFO:              mlflow: Not installed
2024-08-16 10:24:10,851:INFO:              gradio: Not installed
2024-08-16 10:24:10,851:INFO:             fastapi: Not installed
2024-08-16 10:24:10,851:INFO:             uvicorn: Not installed
2024-08-16 10:24:10,852:INFO:              m2cgen: Not installed
2024-08-16 10:24:10,852:INFO:           evidently: Not installed
2024-08-16 10:24:10,852:INFO:               fugue: Not installed
2024-08-16 10:24:10,852:INFO:           streamlit: 1.30.0
2024-08-16 10:24:10,852:INFO:             prophet: Not installed
2024-08-16 10:24:10,852:INFO:None
2024-08-16 10:24:10,852:INFO:Set up data.
2024-08-16 10:24:25,092:INFO:PyCaret ClassificationExperiment
2024-08-16 10:24:25,092:INFO:Logging name: clf-default-name
2024-08-16 10:24:25,092:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 10:24:25,093:INFO:version 3.3.2
2024-08-16 10:24:25,093:INFO:Initializing setup()
2024-08-16 10:24:25,093:INFO:self.USI: 157c
2024-08-16 10:24:25,093:INFO:self._variable_keys: {'exp_name_log', 'data', 'fold_groups_param', 'is_multiclass', 'memory', 'y', '_ml_usecase', 'gpu_param', 'pipeline', 'USI', 'html_param', 'logging_param', 'idx', 'exp_id', 'X', 'seed', 'fold_generator', 'X_train', 'X_test', 'fold_shuffle_param', 'gpu_n_jobs_param', 'fix_imbalance', 'target_param', 'y_test', 'n_jobs_param', 'log_plots_param', 'y_train', '_available_plots'}
2024-08-16 10:24:25,093:INFO:Checking environment
2024-08-16 10:24:25,093:INFO:python_version: 3.11.7
2024-08-16 10:24:25,093:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 10:24:25,093:INFO:machine: x86_64
2024-08-16 10:24:25,093:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 10:24:25,093:INFO:Memory: svmem(total=15531241472, available=11700236288, percent=24.7, used=3250429952, free=2708905984, active=5273706496, inactive=5812187136, buffers=4585644032, cached=4986261504, shared=240201728, slab=1403453440)
2024-08-16 10:24:25,093:INFO:Physical Core: 8
2024-08-16 10:24:25,093:INFO:Logical Core: 16
2024-08-16 10:24:25,093:INFO:Checking libraries
2024-08-16 10:24:25,093:INFO:System:
2024-08-16 10:24:25,093:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 10:24:25,093:INFO:executable: /opt/anaconda/bin/python
2024-08-16 10:24:25,093:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 10:24:25,093:INFO:PyCaret required dependencies:
2024-08-16 10:24:25,093:INFO:                 pip: 23.3.1
2024-08-16 10:24:25,093:INFO:          setuptools: 68.2.2
2024-08-16 10:24:25,093:INFO:             pycaret: 3.3.2
2024-08-16 10:24:25,093:INFO:             IPython: 8.20.0
2024-08-16 10:24:25,093:INFO:          ipywidgets: 7.6.5
2024-08-16 10:24:25,093:INFO:                tqdm: 4.65.0
2024-08-16 10:24:25,093:INFO:               numpy: 1.26.4
2024-08-16 10:24:25,093:INFO:              pandas: 2.1.4
2024-08-16 10:24:25,093:INFO:              jinja2: 3.1.3
2024-08-16 10:24:25,093:INFO:               scipy: 1.11.4
2024-08-16 10:24:25,093:INFO:              joblib: 1.2.0
2024-08-16 10:24:25,093:INFO:             sklearn: 1.2.2
2024-08-16 10:24:25,093:INFO:                pyod: 2.0.1
2024-08-16 10:24:25,094:INFO:            imblearn: 0.11.0
2024-08-16 10:24:25,094:INFO:   category_encoders: 2.6.3
2024-08-16 10:24:25,094:INFO:            lightgbm: 4.5.0
2024-08-16 10:24:25,094:INFO:               numba: 0.59.0
2024-08-16 10:24:25,094:INFO:            requests: 2.31.0
2024-08-16 10:24:25,094:INFO:          matplotlib: 3.8.0
2024-08-16 10:24:25,094:INFO:          scikitplot: 0.3.7
2024-08-16 10:24:25,094:INFO:         yellowbrick: 1.5
2024-08-16 10:24:25,094:INFO:              plotly: 5.9.0
2024-08-16 10:24:25,094:INFO:    plotly-resampler: Not installed
2024-08-16 10:24:25,094:INFO:             kaleido: 0.2.1
2024-08-16 10:24:25,094:INFO:           schemdraw: 0.15
2024-08-16 10:24:25,094:INFO:         statsmodels: 0.14.0
2024-08-16 10:24:25,094:INFO:              sktime: 0.26.0
2024-08-16 10:24:25,094:INFO:               tbats: 1.1.3
2024-08-16 10:24:25,094:INFO:            pmdarima: 2.0.4
2024-08-16 10:24:25,094:INFO:              psutil: 5.9.0
2024-08-16 10:24:25,094:INFO:          markupsafe: 2.1.3
2024-08-16 10:24:25,094:INFO:             pickle5: Not installed
2024-08-16 10:24:25,094:INFO:         cloudpickle: 2.2.1
2024-08-16 10:24:25,094:INFO:         deprecation: 2.1.0
2024-08-16 10:24:25,094:INFO:              xxhash: 3.4.1
2024-08-16 10:24:25,094:INFO:           wurlitzer: 3.0.2
2024-08-16 10:24:25,094:INFO:PyCaret optional dependencies:
2024-08-16 10:24:25,094:INFO:                shap: 0.46.0
2024-08-16 10:24:25,094:INFO:           interpret: Not installed
2024-08-16 10:24:25,094:INFO:                umap: 0.1.1
2024-08-16 10:24:25,094:INFO:     ydata_profiling: Not installed
2024-08-16 10:24:25,094:INFO:  explainerdashboard: Not installed
2024-08-16 10:24:25,094:INFO:             autoviz: Not installed
2024-08-16 10:24:25,094:INFO:           fairlearn: Not installed
2024-08-16 10:24:25,094:INFO:          deepchecks: Not installed
2024-08-16 10:24:25,094:INFO:             xgboost: Not installed
2024-08-16 10:24:25,094:INFO:            catboost: Not installed
2024-08-16 10:24:25,094:INFO:              kmodes: Not installed
2024-08-16 10:24:25,094:INFO:             mlxtend: Not installed
2024-08-16 10:24:25,094:INFO:       statsforecast: Not installed
2024-08-16 10:24:25,094:INFO:        tune_sklearn: Not installed
2024-08-16 10:24:25,094:INFO:                 ray: Not installed
2024-08-16 10:24:25,094:INFO:            hyperopt: Not installed
2024-08-16 10:24:25,094:INFO:              optuna: Not installed
2024-08-16 10:24:25,094:INFO:               skopt: Not installed
2024-08-16 10:24:25,094:INFO:              mlflow: Not installed
2024-08-16 10:24:25,094:INFO:              gradio: Not installed
2024-08-16 10:24:25,094:INFO:             fastapi: Not installed
2024-08-16 10:24:25,094:INFO:             uvicorn: Not installed
2024-08-16 10:24:25,094:INFO:              m2cgen: Not installed
2024-08-16 10:24:25,094:INFO:           evidently: Not installed
2024-08-16 10:24:25,094:INFO:               fugue: Not installed
2024-08-16 10:24:25,094:INFO:           streamlit: 1.30.0
2024-08-16 10:24:25,094:INFO:             prophet: Not installed
2024-08-16 10:24:25,094:INFO:None
2024-08-16 10:24:25,094:INFO:Set up data.
2024-08-16 10:24:25,418:INFO:Set up folding strategy.
2024-08-16 10:24:25,418:INFO:Set up train/test split.
2024-08-16 10:24:25,524:INFO:Set up index.
2024-08-16 10:24:25,526:INFO:Assigning column types.
2024-08-16 10:24:25,933:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-16 10:24:25,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 10:24:25,962:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 10:24:25,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:25,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,009:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 10:24:26,009:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 10:24:26,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,026:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-16 10:24:26,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 10:24:26,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,098:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 10:24:26,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,115:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-16 10:24:26,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:26,205:INFO:Preparing preprocessing pipeline...
2024-08-16 10:24:26,224:INFO:Set up simple imputation.
2024-08-16 10:24:26,240:INFO:Set up column name cleaning.
2024-08-16 10:24:26,777:INFO:Finished creating preprocessing pipeline.
2024-08-16 10:24:26,788:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['UNKNOWN', 'k__Archaea',
                                             'k__Archaea|p__Euryarchaeota',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanobacteriales',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanob...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-08-16 10:24:26,788:INFO:Creating final display dataframe.
2024-08-16 10:24:29,355:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     Condition.MAM
2                   Target type            Binary
3           Original data shape       (103, 2229)
4        Transformed data shape       (103, 2229)
5   Transformed train set shape        (72, 2229)
6    Transformed test set shape        (31, 2229)
7              Numeric features              2228
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              157c
2024-08-16 10:24:29,402:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:29,402:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:29,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:29,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 10:24:29,446:INFO:setup() successfully completed in 4.35s...............
2024-08-16 10:24:31,885:INFO:Initializing compare_models()
2024-08-16 10:24:31,885:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-16 10:24:31,885:INFO:Checking exceptions
2024-08-16 10:24:32,110:INFO:Preparing display monitor
2024-08-16 10:24:32,112:INFO:Initializing Logistic Regression
2024-08-16 10:24:32,112:INFO:Total runtime is 1.0212262471516927e-06 minutes
2024-08-16 10:24:32,112:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:32,113:INFO:Initializing create_model()
2024-08-16 10:24:32,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:32,113:INFO:Checking exceptions
2024-08-16 10:24:32,113:INFO:Importing libraries
2024-08-16 10:24:32,113:INFO:Copying training dataset
2024-08-16 10:24:32,375:INFO:Defining folds
2024-08-16 10:24:32,375:INFO:Declaring metric variables
2024-08-16 10:24:32,375:INFO:Importing untrained model
2024-08-16 10:24:32,375:INFO:Logistic Regression Imported successfully
2024-08-16 10:24:32,375:INFO:Starting cross validation
2024-08-16 10:24:32,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:34,578:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:34,580:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:34,601:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:34,726:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:34,834:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:34,868:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:35,048:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:35,195:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:35,316:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:35,420:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:36,410:INFO:Calculating mean and std
2024-08-16 10:24:36,410:INFO:Creating metrics dataframe
2024-08-16 10:24:36,413:INFO:Uploading results into container
2024-08-16 10:24:36,413:INFO:Uploading model into container now
2024-08-16 10:24:36,413:INFO:_master_model_container: 1
2024-08-16 10:24:36,413:INFO:_display_container: 2
2024-08-16 10:24:36,414:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 10:24:36,414:INFO:create_model() successfully completed......................................
2024-08-16 10:24:36,582:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:36,582:INFO:Creating metrics dataframe
2024-08-16 10:24:36,584:INFO:Initializing K Neighbors Classifier
2024-08-16 10:24:36,584:INFO:Total runtime is 0.07452124357223511 minutes
2024-08-16 10:24:36,584:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:36,584:INFO:Initializing create_model()
2024-08-16 10:24:36,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:36,584:INFO:Checking exceptions
2024-08-16 10:24:36,584:INFO:Importing libraries
2024-08-16 10:24:36,584:INFO:Copying training dataset
2024-08-16 10:24:36,847:INFO:Defining folds
2024-08-16 10:24:36,847:INFO:Declaring metric variables
2024-08-16 10:24:36,848:INFO:Importing untrained model
2024-08-16 10:24:36,848:INFO:K Neighbors Classifier Imported successfully
2024-08-16 10:24:36,848:INFO:Starting cross validation
2024-08-16 10:24:36,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:38,522:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:38,564:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:38,624:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:38,636:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:38,636:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:38,722:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 10:24:39,442:INFO:Calculating mean and std
2024-08-16 10:24:39,443:INFO:Creating metrics dataframe
2024-08-16 10:24:39,445:INFO:Uploading results into container
2024-08-16 10:24:39,445:INFO:Uploading model into container now
2024-08-16 10:24:39,446:INFO:_master_model_container: 2
2024-08-16 10:24:39,446:INFO:_display_container: 2
2024-08-16 10:24:39,446:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-16 10:24:39,446:INFO:create_model() successfully completed......................................
2024-08-16 10:24:39,617:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:39,617:INFO:Creating metrics dataframe
2024-08-16 10:24:39,619:INFO:Initializing Naive Bayes
2024-08-16 10:24:39,619:INFO:Total runtime is 0.1251090923945109 minutes
2024-08-16 10:24:39,619:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:39,619:INFO:Initializing create_model()
2024-08-16 10:24:39,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:39,619:INFO:Checking exceptions
2024-08-16 10:24:39,619:INFO:Importing libraries
2024-08-16 10:24:39,619:INFO:Copying training dataset
2024-08-16 10:24:39,884:INFO:Defining folds
2024-08-16 10:24:39,884:INFO:Declaring metric variables
2024-08-16 10:24:39,884:INFO:Importing untrained model
2024-08-16 10:24:39,884:INFO:Naive Bayes Imported successfully
2024-08-16 10:24:39,884:INFO:Starting cross validation
2024-08-16 10:24:39,887:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:40,663:INFO:Calculating mean and std
2024-08-16 10:24:40,663:INFO:Creating metrics dataframe
2024-08-16 10:24:40,665:INFO:Uploading results into container
2024-08-16 10:24:40,665:INFO:Uploading model into container now
2024-08-16 10:24:40,665:INFO:_master_model_container: 3
2024-08-16 10:24:40,665:INFO:_display_container: 2
2024-08-16 10:24:40,665:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-16 10:24:40,665:INFO:create_model() successfully completed......................................
2024-08-16 10:24:40,809:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:40,809:INFO:Creating metrics dataframe
2024-08-16 10:24:40,810:INFO:Initializing Decision Tree Classifier
2024-08-16 10:24:40,811:INFO:Total runtime is 0.14497105280558267 minutes
2024-08-16 10:24:40,811:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:40,811:INFO:Initializing create_model()
2024-08-16 10:24:40,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:40,811:INFO:Checking exceptions
2024-08-16 10:24:40,811:INFO:Importing libraries
2024-08-16 10:24:40,811:INFO:Copying training dataset
2024-08-16 10:24:41,074:INFO:Defining folds
2024-08-16 10:24:41,074:INFO:Declaring metric variables
2024-08-16 10:24:41,074:INFO:Importing untrained model
2024-08-16 10:24:41,074:INFO:Decision Tree Classifier Imported successfully
2024-08-16 10:24:41,074:INFO:Starting cross validation
2024-08-16 10:24:41,077:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:41,849:INFO:Calculating mean and std
2024-08-16 10:24:41,850:INFO:Creating metrics dataframe
2024-08-16 10:24:41,851:INFO:Uploading results into container
2024-08-16 10:24:41,851:INFO:Uploading model into container now
2024-08-16 10:24:41,852:INFO:_master_model_container: 4
2024-08-16 10:24:41,852:INFO:_display_container: 2
2024-08-16 10:24:41,852:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 10:24:41,852:INFO:create_model() successfully completed......................................
2024-08-16 10:24:41,995:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:41,995:INFO:Creating metrics dataframe
2024-08-16 10:24:41,997:INFO:Initializing SVM - Linear Kernel
2024-08-16 10:24:41,997:INFO:Total runtime is 0.16474758386611937 minutes
2024-08-16 10:24:41,997:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:41,997:INFO:Initializing create_model()
2024-08-16 10:24:41,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:41,997:INFO:Checking exceptions
2024-08-16 10:24:41,997:INFO:Importing libraries
2024-08-16 10:24:41,997:INFO:Copying training dataset
2024-08-16 10:24:42,261:INFO:Defining folds
2024-08-16 10:24:42,261:INFO:Declaring metric variables
2024-08-16 10:24:42,261:INFO:Importing untrained model
2024-08-16 10:24:42,261:INFO:SVM - Linear Kernel Imported successfully
2024-08-16 10:24:42,261:INFO:Starting cross validation
2024-08-16 10:24:42,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:42,830:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 10:24:42,873:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 10:24:42,897:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 10:24:43,042:INFO:Calculating mean and std
2024-08-16 10:24:43,043:INFO:Creating metrics dataframe
2024-08-16 10:24:43,044:INFO:Uploading results into container
2024-08-16 10:24:43,044:INFO:Uploading model into container now
2024-08-16 10:24:43,044:INFO:_master_model_container: 5
2024-08-16 10:24:43,044:INFO:_display_container: 2
2024-08-16 10:24:43,045:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-16 10:24:43,045:INFO:create_model() successfully completed......................................
2024-08-16 10:24:43,188:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:43,188:INFO:Creating metrics dataframe
2024-08-16 10:24:43,190:INFO:Initializing Ridge Classifier
2024-08-16 10:24:43,190:INFO:Total runtime is 0.18462199767430623 minutes
2024-08-16 10:24:43,190:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:43,190:INFO:Initializing create_model()
2024-08-16 10:24:43,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:43,190:INFO:Checking exceptions
2024-08-16 10:24:43,190:INFO:Importing libraries
2024-08-16 10:24:43,190:INFO:Copying training dataset
2024-08-16 10:24:43,454:INFO:Defining folds
2024-08-16 10:24:43,455:INFO:Declaring metric variables
2024-08-16 10:24:43,455:INFO:Importing untrained model
2024-08-16 10:24:43,455:INFO:Ridge Classifier Imported successfully
2024-08-16 10:24:43,455:INFO:Starting cross validation
2024-08-16 10:24:43,458:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:44,266:INFO:Calculating mean and std
2024-08-16 10:24:44,267:INFO:Creating metrics dataframe
2024-08-16 10:24:44,268:INFO:Uploading results into container
2024-08-16 10:24:44,269:INFO:Uploading model into container now
2024-08-16 10:24:44,269:INFO:_master_model_container: 6
2024-08-16 10:24:44,269:INFO:_display_container: 2
2024-08-16 10:24:44,270:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-16 10:24:44,270:INFO:create_model() successfully completed......................................
2024-08-16 10:24:44,412:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:44,413:INFO:Creating metrics dataframe
2024-08-16 10:24:44,414:INFO:Initializing Random Forest Classifier
2024-08-16 10:24:44,414:INFO:Total runtime is 0.20503117640813193 minutes
2024-08-16 10:24:44,414:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:44,414:INFO:Initializing create_model()
2024-08-16 10:24:44,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:44,414:INFO:Checking exceptions
2024-08-16 10:24:44,414:INFO:Importing libraries
2024-08-16 10:24:44,414:INFO:Copying training dataset
2024-08-16 10:24:44,676:INFO:Defining folds
2024-08-16 10:24:44,676:INFO:Declaring metric variables
2024-08-16 10:24:44,676:INFO:Importing untrained model
2024-08-16 10:24:44,676:INFO:Random Forest Classifier Imported successfully
2024-08-16 10:24:44,676:INFO:Starting cross validation
2024-08-16 10:24:44,679:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:45,671:INFO:Calculating mean and std
2024-08-16 10:24:45,672:INFO:Creating metrics dataframe
2024-08-16 10:24:45,673:INFO:Uploading results into container
2024-08-16 10:24:45,673:INFO:Uploading model into container now
2024-08-16 10:24:45,674:INFO:_master_model_container: 7
2024-08-16 10:24:45,674:INFO:_display_container: 2
2024-08-16 10:24:45,674:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 10:24:45,674:INFO:create_model() successfully completed......................................
2024-08-16 10:24:45,820:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:45,820:INFO:Creating metrics dataframe
2024-08-16 10:24:45,822:INFO:Initializing Quadratic Discriminant Analysis
2024-08-16 10:24:45,822:INFO:Total runtime is 0.22848873535792033 minutes
2024-08-16 10:24:45,822:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:45,822:INFO:Initializing create_model()
2024-08-16 10:24:45,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:45,822:INFO:Checking exceptions
2024-08-16 10:24:45,822:INFO:Importing libraries
2024-08-16 10:24:45,822:INFO:Copying training dataset
2024-08-16 10:24:46,088:INFO:Defining folds
2024-08-16 10:24:46,088:INFO:Declaring metric variables
2024-08-16 10:24:46,088:INFO:Importing untrained model
2024-08-16 10:24:46,088:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-16 10:24:46,088:INFO:Starting cross validation
2024-08-16 10:24:46,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:46,458:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,497:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,588:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,637:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,656:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,678:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,727:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,772:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,793:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,822:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 10:24:46,873:INFO:Calculating mean and std
2024-08-16 10:24:46,874:INFO:Creating metrics dataframe
2024-08-16 10:24:46,875:INFO:Uploading results into container
2024-08-16 10:24:46,876:INFO:Uploading model into container now
2024-08-16 10:24:46,876:INFO:_master_model_container: 8
2024-08-16 10:24:46,876:INFO:_display_container: 2
2024-08-16 10:24:46,876:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-16 10:24:46,876:INFO:create_model() successfully completed......................................
2024-08-16 10:24:47,021:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:47,021:INFO:Creating metrics dataframe
2024-08-16 10:24:47,023:INFO:Initializing Ada Boost Classifier
2024-08-16 10:24:47,023:INFO:Total runtime is 0.2485078970591227 minutes
2024-08-16 10:24:47,023:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:47,023:INFO:Initializing create_model()
2024-08-16 10:24:47,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:47,023:INFO:Checking exceptions
2024-08-16 10:24:47,023:INFO:Importing libraries
2024-08-16 10:24:47,023:INFO:Copying training dataset
2024-08-16 10:24:47,286:INFO:Defining folds
2024-08-16 10:24:47,287:INFO:Declaring metric variables
2024-08-16 10:24:47,287:INFO:Importing untrained model
2024-08-16 10:24:47,287:INFO:Ada Boost Classifier Imported successfully
2024-08-16 10:24:47,287:INFO:Starting cross validation
2024-08-16 10:24:47,290:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:47,663:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:47,687:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:47,724:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:47,828:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:47,858:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:47,921:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:47,936:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:48,004:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:48,055:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:48,116:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 10:24:48,376:INFO:Calculating mean and std
2024-08-16 10:24:48,376:INFO:Creating metrics dataframe
2024-08-16 10:24:48,380:INFO:Uploading results into container
2024-08-16 10:24:48,381:INFO:Uploading model into container now
2024-08-16 10:24:48,381:INFO:_master_model_container: 9
2024-08-16 10:24:48,381:INFO:_display_container: 2
2024-08-16 10:24:48,381:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-16 10:24:48,382:INFO:create_model() successfully completed......................................
2024-08-16 10:24:48,530:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:48,530:INFO:Creating metrics dataframe
2024-08-16 10:24:48,531:INFO:Initializing Gradient Boosting Classifier
2024-08-16 10:24:48,531:INFO:Total runtime is 0.2736531098683675 minutes
2024-08-16 10:24:48,532:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:48,532:INFO:Initializing create_model()
2024-08-16 10:24:48,532:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:48,532:INFO:Checking exceptions
2024-08-16 10:24:48,532:INFO:Importing libraries
2024-08-16 10:24:48,532:INFO:Copying training dataset
2024-08-16 10:24:48,795:INFO:Defining folds
2024-08-16 10:24:48,795:INFO:Declaring metric variables
2024-08-16 10:24:48,795:INFO:Importing untrained model
2024-08-16 10:24:48,795:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 10:24:48,795:INFO:Starting cross validation
2024-08-16 10:24:48,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:50,664:INFO:Calculating mean and std
2024-08-16 10:24:50,664:INFO:Creating metrics dataframe
2024-08-16 10:24:50,667:INFO:Uploading results into container
2024-08-16 10:24:50,668:INFO:Uploading model into container now
2024-08-16 10:24:50,668:INFO:_master_model_container: 10
2024-08-16 10:24:50,668:INFO:_display_container: 2
2024-08-16 10:24:50,668:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 10:24:50,668:INFO:create_model() successfully completed......................................
2024-08-16 10:24:50,819:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:50,819:INFO:Creating metrics dataframe
2024-08-16 10:24:50,820:INFO:Initializing Linear Discriminant Analysis
2024-08-16 10:24:50,820:INFO:Total runtime is 0.3118038813273112 minutes
2024-08-16 10:24:50,821:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:50,821:INFO:Initializing create_model()
2024-08-16 10:24:50,821:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:50,821:INFO:Checking exceptions
2024-08-16 10:24:50,821:INFO:Importing libraries
2024-08-16 10:24:50,821:INFO:Copying training dataset
2024-08-16 10:24:51,086:INFO:Defining folds
2024-08-16 10:24:51,086:INFO:Declaring metric variables
2024-08-16 10:24:51,086:INFO:Importing untrained model
2024-08-16 10:24:51,086:INFO:Linear Discriminant Analysis Imported successfully
2024-08-16 10:24:51,086:INFO:Starting cross validation
2024-08-16 10:24:51,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:51,854:INFO:Calculating mean and std
2024-08-16 10:24:51,855:INFO:Creating metrics dataframe
2024-08-16 10:24:51,856:INFO:Uploading results into container
2024-08-16 10:24:51,857:INFO:Uploading model into container now
2024-08-16 10:24:51,857:INFO:_master_model_container: 11
2024-08-16 10:24:51,857:INFO:_display_container: 2
2024-08-16 10:24:51,857:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-16 10:24:51,857:INFO:create_model() successfully completed......................................
2024-08-16 10:24:52,010:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:52,010:INFO:Creating metrics dataframe
2024-08-16 10:24:52,011:INFO:Initializing Extra Trees Classifier
2024-08-16 10:24:52,011:INFO:Total runtime is 0.3316521763801575 minutes
2024-08-16 10:24:52,011:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:52,012:INFO:Initializing create_model()
2024-08-16 10:24:52,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:52,012:INFO:Checking exceptions
2024-08-16 10:24:52,012:INFO:Importing libraries
2024-08-16 10:24:52,012:INFO:Copying training dataset
2024-08-16 10:24:52,274:INFO:Defining folds
2024-08-16 10:24:52,274:INFO:Declaring metric variables
2024-08-16 10:24:52,275:INFO:Importing untrained model
2024-08-16 10:24:52,275:INFO:Extra Trees Classifier Imported successfully
2024-08-16 10:24:52,275:INFO:Starting cross validation
2024-08-16 10:24:52,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:24:53,285:INFO:Calculating mean and std
2024-08-16 10:24:53,286:INFO:Creating metrics dataframe
2024-08-16 10:24:53,287:INFO:Uploading results into container
2024-08-16 10:24:53,287:INFO:Uploading model into container now
2024-08-16 10:24:53,287:INFO:_master_model_container: 12
2024-08-16 10:24:53,288:INFO:_display_container: 2
2024-08-16 10:24:53,288:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-16 10:24:53,288:INFO:create_model() successfully completed......................................
2024-08-16 10:24:53,432:INFO:SubProcess create_model() end ==================================
2024-08-16 10:24:53,432:INFO:Creating metrics dataframe
2024-08-16 10:24:53,434:INFO:Initializing Light Gradient Boosting Machine
2024-08-16 10:24:53,434:INFO:Total runtime is 0.3553633491198222 minutes
2024-08-16 10:24:53,434:INFO:SubProcess create_model() called ==================================
2024-08-16 10:24:53,434:INFO:Initializing create_model()
2024-08-16 10:24:53,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:24:53,434:INFO:Checking exceptions
2024-08-16 10:24:53,434:INFO:Importing libraries
2024-08-16 10:24:53,434:INFO:Copying training dataset
2024-08-16 10:24:53,700:INFO:Defining folds
2024-08-16 10:24:53,700:INFO:Declaring metric variables
2024-08-16 10:24:53,700:INFO:Importing untrained model
2024-08-16 10:24:53,700:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-16 10:24:53,701:INFO:Starting cross validation
2024-08-16 10:24:53,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:26:52,527:INFO:Calculating mean and std
2024-08-16 10:26:52,527:INFO:Creating metrics dataframe
2024-08-16 10:26:52,529:INFO:Uploading results into container
2024-08-16 10:26:52,529:INFO:Uploading model into container now
2024-08-16 10:26:52,529:INFO:_master_model_container: 13
2024-08-16 10:26:52,529:INFO:_display_container: 2
2024-08-16 10:26:52,529:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-16 10:26:52,530:INFO:create_model() successfully completed......................................
2024-08-16 10:26:52,675:INFO:SubProcess create_model() end ==================================
2024-08-16 10:26:52,675:INFO:Creating metrics dataframe
2024-08-16 10:26:52,677:INFO:Initializing Dummy Classifier
2024-08-16 10:26:52,677:INFO:Total runtime is 2.3427419741948445 minutes
2024-08-16 10:26:52,677:INFO:SubProcess create_model() called ==================================
2024-08-16 10:26:52,677:INFO:Initializing create_model()
2024-08-16 10:26:52,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61d74369d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:26:52,677:INFO:Checking exceptions
2024-08-16 10:26:52,677:INFO:Importing libraries
2024-08-16 10:26:52,677:INFO:Copying training dataset
2024-08-16 10:26:52,947:INFO:Defining folds
2024-08-16 10:26:52,947:INFO:Declaring metric variables
2024-08-16 10:26:52,947:INFO:Importing untrained model
2024-08-16 10:26:52,948:INFO:Dummy Classifier Imported successfully
2024-08-16 10:26:52,948:INFO:Starting cross validation
2024-08-16 10:26:52,951:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:26:53,782:INFO:Calculating mean and std
2024-08-16 10:26:53,782:INFO:Creating metrics dataframe
2024-08-16 10:26:53,783:INFO:Uploading results into container
2024-08-16 10:26:53,784:INFO:Uploading model into container now
2024-08-16 10:26:53,784:INFO:_master_model_container: 14
2024-08-16 10:26:53,784:INFO:_display_container: 2
2024-08-16 10:26:53,784:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 10:26:53,784:INFO:create_model() successfully completed......................................
2024-08-16 10:26:53,929:INFO:SubProcess create_model() end ==================================
2024-08-16 10:26:53,929:INFO:Creating metrics dataframe
2024-08-16 10:26:53,932:WARNING:/home/theop/.local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-16 10:26:53,932:INFO:Initializing create_model()
2024-08-16 10:26:53,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:26:53,932:INFO:Checking exceptions
2024-08-16 10:26:53,933:INFO:Importing libraries
2024-08-16 10:26:53,933:INFO:Copying training dataset
2024-08-16 10:26:54,211:INFO:Defining folds
2024-08-16 10:26:54,211:INFO:Declaring metric variables
2024-08-16 10:26:54,211:INFO:Importing untrained model
2024-08-16 10:26:54,211:INFO:Declaring custom model
2024-08-16 10:26:54,212:INFO:Logistic Regression Imported successfully
2024-08-16 10:26:54,215:INFO:Cross validation set to False
2024-08-16 10:26:54,215:INFO:Fitting Model
2024-08-16 10:26:54,594:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2024-08-16 10:26:54,595:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 10:26:54,595:INFO:create_model() successfully completed......................................
2024-08-16 10:26:54,775:INFO:_master_model_container: 14
2024-08-16 10:26:54,775:INFO:_display_container: 2
2024-08-16 10:26:54,776:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 10:26:54,776:INFO:compare_models() successfully completed......................................
2024-08-16 10:27:39,255:INFO:Initializing create_model()
2024-08-16 10:27:39,255:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:27:39,256:INFO:Checking exceptions
2024-08-16 10:27:39,257:INFO:Importing libraries
2024-08-16 10:27:39,257:INFO:Copying training dataset
2024-08-16 10:27:39,535:INFO:Defining folds
2024-08-16 10:27:39,535:INFO:Declaring metric variables
2024-08-16 10:27:39,535:INFO:Importing untrained model
2024-08-16 10:27:39,536:INFO:Random Forest Classifier Imported successfully
2024-08-16 10:27:39,536:INFO:Starting cross validation
2024-08-16 10:27:39,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:27:40,585:INFO:Calculating mean and std
2024-08-16 10:27:40,585:INFO:Creating metrics dataframe
2024-08-16 10:27:40,587:INFO:Finalizing model
2024-08-16 10:27:40,743:INFO:Uploading results into container
2024-08-16 10:27:40,743:INFO:Uploading model into container now
2024-08-16 10:27:40,748:INFO:_master_model_container: 15
2024-08-16 10:27:40,748:INFO:_display_container: 3
2024-08-16 10:27:40,748:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 10:27:40,748:INFO:create_model() successfully completed......................................
2024-08-16 10:27:45,008:INFO:Initializing tune_model()
2024-08-16 10:27:45,008:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 10:27:45,008:INFO:Checking exceptions
2024-08-16 10:27:45,061:INFO:Copying training dataset
2024-08-16 10:27:45,283:INFO:Checking base model
2024-08-16 10:27:45,284:INFO:Base model : Random Forest Classifier
2024-08-16 10:27:45,284:INFO:Declaring metric variables
2024-08-16 10:27:45,284:INFO:Defining Hyperparameters
2024-08-16 10:27:45,425:INFO:Tuning with n_jobs=-1
2024-08-16 10:27:45,425:INFO:Initializing RandomizedSearchCV
2024-08-16 10:27:56,761:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2024-08-16 10:27:56,761:INFO:Hyperparameter search completed
2024-08-16 10:27:56,761:INFO:SubProcess create_model() called ==================================
2024-08-16 10:27:56,761:INFO:Initializing create_model()
2024-08-16 10:27:56,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f61e0d69a50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': True})
2024-08-16 10:27:56,761:INFO:Checking exceptions
2024-08-16 10:27:56,761:INFO:Importing libraries
2024-08-16 10:27:56,761:INFO:Copying training dataset
2024-08-16 10:27:57,048:INFO:Defining folds
2024-08-16 10:27:57,049:INFO:Declaring metric variables
2024-08-16 10:27:57,049:INFO:Importing untrained model
2024-08-16 10:27:57,049:INFO:Declaring custom model
2024-08-16 10:27:57,049:INFO:Random Forest Classifier Imported successfully
2024-08-16 10:27:57,049:INFO:Starting cross validation
2024-08-16 10:27:57,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:27:58,518:INFO:Calculating mean and std
2024-08-16 10:27:58,518:INFO:Creating metrics dataframe
2024-08-16 10:27:58,520:INFO:Finalizing model
2024-08-16 10:27:58,745:INFO:Uploading results into container
2024-08-16 10:27:58,746:INFO:Uploading model into container now
2024-08-16 10:27:58,746:INFO:_master_model_container: 16
2024-08-16 10:27:58,747:INFO:_display_container: 4
2024-08-16 10:27:58,747:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 10:27:58,747:INFO:create_model() successfully completed......................................
2024-08-16 10:27:58,935:INFO:SubProcess create_model() end ==================================
2024-08-16 10:27:58,935:INFO:choose_better activated
2024-08-16 10:27:58,935:INFO:SubProcess create_model() called ==================================
2024-08-16 10:27:58,935:INFO:Initializing create_model()
2024-08-16 10:27:58,935:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 10:27:58,935:INFO:Checking exceptions
2024-08-16 10:27:58,936:INFO:Importing libraries
2024-08-16 10:27:58,936:INFO:Copying training dataset
2024-08-16 10:27:59,309:INFO:Defining folds
2024-08-16 10:27:59,309:INFO:Declaring metric variables
2024-08-16 10:27:59,309:INFO:Importing untrained model
2024-08-16 10:27:59,309:INFO:Declaring custom model
2024-08-16 10:27:59,309:INFO:Random Forest Classifier Imported successfully
2024-08-16 10:27:59,309:INFO:Starting cross validation
2024-08-16 10:27:59,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 10:28:00,372:INFO:Calculating mean and std
2024-08-16 10:28:00,372:INFO:Creating metrics dataframe
2024-08-16 10:28:00,374:INFO:Finalizing model
2024-08-16 10:28:00,534:INFO:Uploading results into container
2024-08-16 10:28:00,535:INFO:Uploading model into container now
2024-08-16 10:28:00,535:INFO:_master_model_container: 17
2024-08-16 10:28:00,535:INFO:_display_container: 5
2024-08-16 10:28:00,535:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 10:28:00,535:INFO:create_model() successfully completed......................................
2024-08-16 10:28:00,778:INFO:SubProcess create_model() end ==================================
2024-08-16 10:28:00,779:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.5714
2024-08-16 10:28:00,779:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.7071
2024-08-16 10:28:00,779:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-08-16 10:28:00,779:INFO:choose_better completed
2024-08-16 10:28:00,784:INFO:_master_model_container: 17
2024-08-16 10:28:00,784:INFO:_display_container: 4
2024-08-16 10:28:00,785:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 10:28:00,785:INFO:tune_model() successfully completed......................................
2024-08-16 10:28:25,681:INFO:Initializing evaluate_model()
2024-08-16 10:28:25,681:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-08-16 10:28:25,892:INFO:Initializing plot_model()
2024-08-16 10:28:25,892:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-16 10:28:25,892:INFO:Checking exceptions
2024-08-16 10:28:26,196:INFO:Preloading libraries
2024-08-16 10:28:26,202:INFO:Copying training dataset
2024-08-16 10:28:26,202:INFO:Plot type: pipeline
2024-08-16 10:28:29,122:INFO:Visual Rendered Successfully
2024-08-16 10:28:29,279:INFO:plot_model() successfully completed......................................
2024-08-16 10:35:53,498:INFO:Initializing plot_model()
2024-08-16 10:35:53,498:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-16 10:35:53,498:INFO:Checking exceptions
2024-08-16 10:35:53,562:INFO:Preloading libraries
2024-08-16 10:35:53,566:INFO:Copying training dataset
2024-08-16 10:35:53,566:INFO:Plot type: auc
2024-08-16 10:35:55,041:INFO:Fitting Model
2024-08-16 10:35:55,042:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-08-16 10:35:55,042:INFO:Scoring test/hold-out set
2024-08-16 10:37:12,352:INFO:Visual Rendered Successfully
2024-08-16 10:37:12,503:INFO:plot_model() successfully completed......................................
2024-08-16 10:40:44,055:INFO:Initializing predict_model()
2024-08-16 10:40:44,055:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f61d7d51010>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f61ddcf6fc0>)
2024-08-16 10:40:44,055:INFO:Checking exceptions
2024-08-16 10:40:44,055:INFO:Preloading libraries
2024-08-16 15:36:09,694:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 15:36:09,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 15:36:09,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 15:36:09,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 15:36:14,493:INFO:PyCaret ClassificationExperiment
2024-08-16 15:36:14,493:INFO:Logging name: clf-default-name
2024-08-16 15:36:14,493:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 15:36:14,493:INFO:version 3.3.2
2024-08-16 15:36:14,493:INFO:Initializing setup()
2024-08-16 15:36:14,493:INFO:self.USI: 08b0
2024-08-16 15:36:14,493:INFO:self._variable_keys: {'exp_name_log', 'y', 'target_param', 'fold_groups_param', 'gpu_param', 'data', 'X_test', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'X_train', 'y_test', 'seed', 'memory', 'gpu_n_jobs_param', 'X', 'fold_generator', 'fix_imbalance', '_ml_usecase', 'idx', 'n_jobs_param', 'log_plots_param', 'pipeline', 'exp_id', '_available_plots', 'logging_param', 'is_multiclass'}
2024-08-16 15:36:14,493:INFO:Checking environment
2024-08-16 15:36:14,493:INFO:python_version: 3.11.7
2024-08-16 15:36:14,493:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 15:36:14,493:INFO:machine: x86_64
2024-08-16 15:36:14,495:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 15:36:14,495:INFO:Memory: svmem(total=15531241472, available=13111435264, percent=15.6, used=1955151872, free=10268958720, active=1227464704, inactive=3102986240, buffers=795283456, cached=2511847424, shared=124317696, slab=648200192)
2024-08-16 15:36:14,495:INFO:Physical Core: 8
2024-08-16 15:36:14,495:INFO:Logical Core: 16
2024-08-16 15:36:14,495:INFO:Checking libraries
2024-08-16 15:36:14,495:INFO:System:
2024-08-16 15:36:14,495:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 15:36:14,495:INFO:executable: /opt/anaconda/bin/python
2024-08-16 15:36:14,495:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 15:36:14,495:INFO:PyCaret required dependencies:
2024-08-16 15:36:14,705:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:14,860:INFO:                 pip: 23.3.1
2024-08-16 15:36:14,860:INFO:          setuptools: 68.2.2
2024-08-16 15:36:14,860:INFO:             pycaret: 3.3.2
2024-08-16 15:36:14,860:INFO:             IPython: 8.20.0
2024-08-16 15:36:14,860:INFO:          ipywidgets: 7.6.5
2024-08-16 15:36:14,860:INFO:                tqdm: 4.65.0
2024-08-16 15:36:14,860:INFO:               numpy: 1.26.4
2024-08-16 15:36:14,860:INFO:              pandas: 2.1.4
2024-08-16 15:36:14,860:INFO:              jinja2: 3.1.3
2024-08-16 15:36:14,860:INFO:               scipy: 1.11.4
2024-08-16 15:36:14,860:INFO:              joblib: 1.2.0
2024-08-16 15:36:14,860:INFO:             sklearn: 1.2.2
2024-08-16 15:36:14,860:INFO:                pyod: 2.0.1
2024-08-16 15:36:14,860:INFO:            imblearn: 0.11.0
2024-08-16 15:36:14,860:INFO:   category_encoders: 2.6.3
2024-08-16 15:36:14,860:INFO:            lightgbm: 4.5.0
2024-08-16 15:36:14,860:INFO:               numba: 0.59.0
2024-08-16 15:36:14,860:INFO:            requests: 2.31.0
2024-08-16 15:36:14,860:INFO:          matplotlib: 3.8.0
2024-08-16 15:36:14,860:INFO:          scikitplot: 0.3.7
2024-08-16 15:36:14,860:INFO:         yellowbrick: 1.5
2024-08-16 15:36:14,860:INFO:              plotly: 5.9.0
2024-08-16 15:36:14,860:INFO:    plotly-resampler: Not installed
2024-08-16 15:36:14,860:INFO:             kaleido: 0.2.1
2024-08-16 15:36:14,860:INFO:           schemdraw: 0.15
2024-08-16 15:36:14,860:INFO:         statsmodels: 0.14.0
2024-08-16 15:36:14,860:INFO:              sktime: 0.26.0
2024-08-16 15:36:14,860:INFO:               tbats: 1.1.3
2024-08-16 15:36:14,860:INFO:            pmdarima: 2.0.4
2024-08-16 15:36:14,860:INFO:              psutil: 5.9.0
2024-08-16 15:36:14,860:INFO:          markupsafe: 2.1.3
2024-08-16 15:36:14,860:INFO:             pickle5: Not installed
2024-08-16 15:36:14,860:INFO:         cloudpickle: 2.2.1
2024-08-16 15:36:14,860:INFO:         deprecation: 2.1.0
2024-08-16 15:36:14,860:INFO:              xxhash: 3.4.1
2024-08-16 15:36:14,860:INFO:           wurlitzer: 3.0.2
2024-08-16 15:36:14,860:INFO:PyCaret optional dependencies:
2024-08-16 15:36:14,868:INFO:                shap: 0.46.0
2024-08-16 15:36:14,868:INFO:           interpret: Not installed
2024-08-16 15:36:14,868:INFO:                umap: 0.1.1
2024-08-16 15:36:14,868:INFO:     ydata_profiling: Not installed
2024-08-16 15:36:14,868:INFO:  explainerdashboard: Not installed
2024-08-16 15:36:14,868:INFO:             autoviz: Not installed
2024-08-16 15:36:14,868:INFO:           fairlearn: Not installed
2024-08-16 15:36:14,868:INFO:          deepchecks: Not installed
2024-08-16 15:36:14,868:INFO:             xgboost: Not installed
2024-08-16 15:36:14,868:INFO:            catboost: Not installed
2024-08-16 15:36:14,868:INFO:              kmodes: Not installed
2024-08-16 15:36:14,868:INFO:             mlxtend: Not installed
2024-08-16 15:36:14,868:INFO:       statsforecast: Not installed
2024-08-16 15:36:14,868:INFO:        tune_sklearn: Not installed
2024-08-16 15:36:14,868:INFO:                 ray: Not installed
2024-08-16 15:36:14,869:INFO:            hyperopt: Not installed
2024-08-16 15:36:14,869:INFO:              optuna: Not installed
2024-08-16 15:36:14,869:INFO:               skopt: Not installed
2024-08-16 15:36:14,869:INFO:              mlflow: Not installed
2024-08-16 15:36:14,869:INFO:              gradio: Not installed
2024-08-16 15:36:14,869:INFO:             fastapi: Not installed
2024-08-16 15:36:14,869:INFO:             uvicorn: Not installed
2024-08-16 15:36:14,869:INFO:              m2cgen: Not installed
2024-08-16 15:36:14,869:INFO:           evidently: Not installed
2024-08-16 15:36:14,869:INFO:               fugue: Not installed
2024-08-16 15:36:14,869:INFO:           streamlit: 1.30.0
2024-08-16 15:36:14,869:INFO:             prophet: Not installed
2024-08-16 15:36:14,869:INFO:None
2024-08-16 15:36:14,869:INFO:Set up data.
2024-08-16 15:36:15,164:INFO:Set up folding strategy.
2024-08-16 15:36:15,165:INFO:Set up train/test split.
2024-08-16 15:36:15,402:INFO:Set up index.
2024-08-16 15:36:15,404:INFO:Assigning column types.
2024-08-16 15:36:15,656:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-16 15:36:15,684:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 15:36:15,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 15:36:15,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,736:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 15:36:15,737:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 15:36:15,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,755:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-16 15:36:15,783:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 15:36:15,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,828:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 15:36:15,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,846:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-16 15:36:15,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,937:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:15,946:INFO:Preparing preprocessing pipeline...
2024-08-16 15:36:15,964:INFO:Set up simple imputation.
2024-08-16 15:36:16,108:INFO:Set up column name cleaning.
2024-08-16 15:36:16,656:INFO:Finished creating preprocessing pipeline.
2024-08-16 15:36:16,674:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['index', 'UNKNOWN', 'k__Archaea',
                                             'k__Archaea|p__Euryarchaeota',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanobacteriales',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-08-16 15:36:16,674:INFO:Creating final display dataframe.
2024-08-16 15:36:19,375:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     Condition.MAM
2                   Target type            Binary
3           Original data shape       (103, 2230)
4        Transformed data shape       (103, 2230)
5   Transformed train set shape        (72, 2230)
6    Transformed test set shape        (31, 2230)
7              Numeric features              2229
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              08b0
2024-08-16 15:36:19,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:19,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:19,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:19,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 15:36:19,470:INFO:setup() successfully completed in 4.98s...............
2024-08-16 15:36:19,486:INFO:Initializing compare_models()
2024-08-16 15:36:19,486:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-16 15:36:19,486:INFO:Checking exceptions
2024-08-16 15:36:19,699:INFO:Preparing display monitor
2024-08-16 15:36:19,701:INFO:Initializing Logistic Regression
2024-08-16 15:36:19,701:INFO:Total runtime is 8.463859558105468e-07 minutes
2024-08-16 15:36:19,701:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:19,701:INFO:Initializing create_model()
2024-08-16 15:36:19,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:19,701:INFO:Checking exceptions
2024-08-16 15:36:19,701:INFO:Importing libraries
2024-08-16 15:36:19,701:INFO:Copying training dataset
2024-08-16 15:36:19,955:INFO:Defining folds
2024-08-16 15:36:19,956:INFO:Declaring metric variables
2024-08-16 15:36:19,956:INFO:Importing untrained model
2024-08-16 15:36:19,956:INFO:Logistic Regression Imported successfully
2024-08-16 15:36:19,956:INFO:Starting cross validation
2024-08-16 15:36:19,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:22,143:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,166:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,167:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,207:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,211:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,253:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,650:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,713:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,829:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:22,974:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:23,722:INFO:Calculating mean and std
2024-08-16 15:36:23,723:INFO:Creating metrics dataframe
2024-08-16 15:36:23,725:INFO:Uploading results into container
2024-08-16 15:36:23,725:INFO:Uploading model into container now
2024-08-16 15:36:23,726:INFO:_master_model_container: 1
2024-08-16 15:36:23,726:INFO:_display_container: 2
2024-08-16 15:36:23,726:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 15:36:23,726:INFO:create_model() successfully completed......................................
2024-08-16 15:36:23,883:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:23,883:INFO:Creating metrics dataframe
2024-08-16 15:36:23,884:INFO:Initializing K Neighbors Classifier
2024-08-16 15:36:23,884:INFO:Total runtime is 0.0697280764579773 minutes
2024-08-16 15:36:23,884:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:23,885:INFO:Initializing create_model()
2024-08-16 15:36:23,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:23,885:INFO:Checking exceptions
2024-08-16 15:36:23,885:INFO:Importing libraries
2024-08-16 15:36:23,885:INFO:Copying training dataset
2024-08-16 15:36:24,140:INFO:Defining folds
2024-08-16 15:36:24,140:INFO:Declaring metric variables
2024-08-16 15:36:24,140:INFO:Importing untrained model
2024-08-16 15:36:24,140:INFO:K Neighbors Classifier Imported successfully
2024-08-16 15:36:24,140:INFO:Starting cross validation
2024-08-16 15:36:24,143:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:25,791:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:25,792:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:25,801:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:25,895:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:25,904:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:25,913:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 15:36:26,598:INFO:Calculating mean and std
2024-08-16 15:36:26,599:INFO:Creating metrics dataframe
2024-08-16 15:36:26,601:INFO:Uploading results into container
2024-08-16 15:36:26,601:INFO:Uploading model into container now
2024-08-16 15:36:26,601:INFO:_master_model_container: 2
2024-08-16 15:36:26,601:INFO:_display_container: 2
2024-08-16 15:36:26,602:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-16 15:36:26,602:INFO:create_model() successfully completed......................................
2024-08-16 15:36:26,776:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:26,776:INFO:Creating metrics dataframe
2024-08-16 15:36:26,777:INFO:Initializing Naive Bayes
2024-08-16 15:36:26,777:INFO:Total runtime is 0.11794490814208984 minutes
2024-08-16 15:36:26,777:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:26,778:INFO:Initializing create_model()
2024-08-16 15:36:26,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:26,778:INFO:Checking exceptions
2024-08-16 15:36:26,778:INFO:Importing libraries
2024-08-16 15:36:26,778:INFO:Copying training dataset
2024-08-16 15:36:27,029:INFO:Defining folds
2024-08-16 15:36:27,029:INFO:Declaring metric variables
2024-08-16 15:36:27,030:INFO:Importing untrained model
2024-08-16 15:36:27,030:INFO:Naive Bayes Imported successfully
2024-08-16 15:36:27,030:INFO:Starting cross validation
2024-08-16 15:36:27,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:27,823:INFO:Calculating mean and std
2024-08-16 15:36:27,824:INFO:Creating metrics dataframe
2024-08-16 15:36:27,825:INFO:Uploading results into container
2024-08-16 15:36:27,825:INFO:Uploading model into container now
2024-08-16 15:36:27,826:INFO:_master_model_container: 3
2024-08-16 15:36:27,826:INFO:_display_container: 2
2024-08-16 15:36:27,826:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-08-16 15:36:27,826:INFO:create_model() successfully completed......................................
2024-08-16 15:36:27,956:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:27,956:INFO:Creating metrics dataframe
2024-08-16 15:36:27,957:INFO:Initializing Decision Tree Classifier
2024-08-16 15:36:27,958:INFO:Total runtime is 0.13761363426844278 minutes
2024-08-16 15:36:27,958:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:27,958:INFO:Initializing create_model()
2024-08-16 15:36:27,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:27,958:INFO:Checking exceptions
2024-08-16 15:36:27,958:INFO:Importing libraries
2024-08-16 15:36:27,958:INFO:Copying training dataset
2024-08-16 15:36:28,212:INFO:Defining folds
2024-08-16 15:36:28,212:INFO:Declaring metric variables
2024-08-16 15:36:28,212:INFO:Importing untrained model
2024-08-16 15:36:28,212:INFO:Decision Tree Classifier Imported successfully
2024-08-16 15:36:28,212:INFO:Starting cross validation
2024-08-16 15:36:28,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:28,992:INFO:Calculating mean and std
2024-08-16 15:36:28,992:INFO:Creating metrics dataframe
2024-08-16 15:36:28,994:INFO:Uploading results into container
2024-08-16 15:36:28,994:INFO:Uploading model into container now
2024-08-16 15:36:28,995:INFO:_master_model_container: 4
2024-08-16 15:36:28,995:INFO:_display_container: 2
2024-08-16 15:36:28,995:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-16 15:36:28,995:INFO:create_model() successfully completed......................................
2024-08-16 15:36:29,134:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:29,134:INFO:Creating metrics dataframe
2024-08-16 15:36:29,135:INFO:Initializing SVM - Linear Kernel
2024-08-16 15:36:29,135:INFO:Total runtime is 0.15724584658940632 minutes
2024-08-16 15:36:29,136:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:29,136:INFO:Initializing create_model()
2024-08-16 15:36:29,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:29,136:INFO:Checking exceptions
2024-08-16 15:36:29,136:INFO:Importing libraries
2024-08-16 15:36:29,136:INFO:Copying training dataset
2024-08-16 15:36:29,388:INFO:Defining folds
2024-08-16 15:36:29,389:INFO:Declaring metric variables
2024-08-16 15:36:29,389:INFO:Importing untrained model
2024-08-16 15:36:29,389:INFO:SVM - Linear Kernel Imported successfully
2024-08-16 15:36:29,389:INFO:Starting cross validation
2024-08-16 15:36:29,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:29,907:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 15:36:29,932:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 15:36:30,055:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 15:36:30,147:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 15:36:30,147:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-16 15:36:30,154:INFO:Calculating mean and std
2024-08-16 15:36:30,154:INFO:Creating metrics dataframe
2024-08-16 15:36:30,156:INFO:Uploading results into container
2024-08-16 15:36:30,156:INFO:Uploading model into container now
2024-08-16 15:36:30,157:INFO:_master_model_container: 5
2024-08-16 15:36:30,157:INFO:_display_container: 2
2024-08-16 15:36:30,157:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-16 15:36:30,157:INFO:create_model() successfully completed......................................
2024-08-16 15:36:30,296:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:30,296:INFO:Creating metrics dataframe
2024-08-16 15:36:30,297:INFO:Initializing Ridge Classifier
2024-08-16 15:36:30,298:INFO:Total runtime is 0.17661366462707517 minutes
2024-08-16 15:36:30,298:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:30,298:INFO:Initializing create_model()
2024-08-16 15:36:30,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:30,298:INFO:Checking exceptions
2024-08-16 15:36:30,298:INFO:Importing libraries
2024-08-16 15:36:30,298:INFO:Copying training dataset
2024-08-16 15:36:30,550:INFO:Defining folds
2024-08-16 15:36:30,551:INFO:Declaring metric variables
2024-08-16 15:36:30,551:INFO:Importing untrained model
2024-08-16 15:36:30,551:INFO:Ridge Classifier Imported successfully
2024-08-16 15:36:30,551:INFO:Starting cross validation
2024-08-16 15:36:30,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:31,309:INFO:Calculating mean and std
2024-08-16 15:36:31,310:INFO:Creating metrics dataframe
2024-08-16 15:36:31,311:INFO:Uploading results into container
2024-08-16 15:36:31,312:INFO:Uploading model into container now
2024-08-16 15:36:31,312:INFO:_master_model_container: 6
2024-08-16 15:36:31,312:INFO:_display_container: 2
2024-08-16 15:36:31,312:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-16 15:36:31,312:INFO:create_model() successfully completed......................................
2024-08-16 15:36:31,451:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:31,451:INFO:Creating metrics dataframe
2024-08-16 15:36:31,452:INFO:Initializing Random Forest Classifier
2024-08-16 15:36:31,452:INFO:Total runtime is 0.19586008389790852 minutes
2024-08-16 15:36:31,452:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:31,453:INFO:Initializing create_model()
2024-08-16 15:36:31,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:31,453:INFO:Checking exceptions
2024-08-16 15:36:31,453:INFO:Importing libraries
2024-08-16 15:36:31,453:INFO:Copying training dataset
2024-08-16 15:36:31,710:INFO:Defining folds
2024-08-16 15:36:31,710:INFO:Declaring metric variables
2024-08-16 15:36:31,710:INFO:Importing untrained model
2024-08-16 15:36:31,710:INFO:Random Forest Classifier Imported successfully
2024-08-16 15:36:31,710:INFO:Starting cross validation
2024-08-16 15:36:31,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:32,672:INFO:Calculating mean and std
2024-08-16 15:36:32,673:INFO:Creating metrics dataframe
2024-08-16 15:36:32,675:INFO:Uploading results into container
2024-08-16 15:36:32,675:INFO:Uploading model into container now
2024-08-16 15:36:32,675:INFO:_master_model_container: 7
2024-08-16 15:36:32,675:INFO:_display_container: 2
2024-08-16 15:36:32,676:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 15:36:32,676:INFO:create_model() successfully completed......................................
2024-08-16 15:36:32,813:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:32,814:INFO:Creating metrics dataframe
2024-08-16 15:36:32,815:INFO:Initializing Quadratic Discriminant Analysis
2024-08-16 15:36:32,815:INFO:Total runtime is 0.218573260307312 minutes
2024-08-16 15:36:32,815:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:32,815:INFO:Initializing create_model()
2024-08-16 15:36:32,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:32,815:INFO:Checking exceptions
2024-08-16 15:36:32,815:INFO:Importing libraries
2024-08-16 15:36:32,815:INFO:Copying training dataset
2024-08-16 15:36:33,068:INFO:Defining folds
2024-08-16 15:36:33,068:INFO:Declaring metric variables
2024-08-16 15:36:33,068:INFO:Importing untrained model
2024-08-16 15:36:33,068:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-16 15:36:33,069:INFO:Starting cross validation
2024-08-16 15:36:33,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:33,434:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,463:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,521:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,590:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,665:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,676:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,690:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,744:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,766:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,780:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-08-16 15:36:33,828:INFO:Calculating mean and std
2024-08-16 15:36:33,828:INFO:Creating metrics dataframe
2024-08-16 15:36:33,830:INFO:Uploading results into container
2024-08-16 15:36:33,830:INFO:Uploading model into container now
2024-08-16 15:36:33,831:INFO:_master_model_container: 8
2024-08-16 15:36:33,831:INFO:_display_container: 2
2024-08-16 15:36:33,831:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-08-16 15:36:33,831:INFO:create_model() successfully completed......................................
2024-08-16 15:36:33,970:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:33,970:INFO:Creating metrics dataframe
2024-08-16 15:36:33,971:INFO:Initializing Ada Boost Classifier
2024-08-16 15:36:33,971:INFO:Total runtime is 0.23784188032150266 minutes
2024-08-16 15:36:33,971:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:33,971:INFO:Initializing create_model()
2024-08-16 15:36:33,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:33,971:INFO:Checking exceptions
2024-08-16 15:36:33,971:INFO:Importing libraries
2024-08-16 15:36:33,972:INFO:Copying training dataset
2024-08-16 15:36:34,224:INFO:Defining folds
2024-08-16 15:36:34,224:INFO:Declaring metric variables
2024-08-16 15:36:34,224:INFO:Importing untrained model
2024-08-16 15:36:34,224:INFO:Ada Boost Classifier Imported successfully
2024-08-16 15:36:34,224:INFO:Starting cross validation
2024-08-16 15:36:34,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:34,573:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,642:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,731:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,736:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,812:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,840:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,912:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,941:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,959:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:34,982:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-16 15:36:35,045:INFO:Calculating mean and std
2024-08-16 15:36:35,045:INFO:Creating metrics dataframe
2024-08-16 15:36:35,047:INFO:Uploading results into container
2024-08-16 15:36:35,047:INFO:Uploading model into container now
2024-08-16 15:36:35,047:INFO:_master_model_container: 9
2024-08-16 15:36:35,047:INFO:_display_container: 2
2024-08-16 15:36:35,048:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-16 15:36:35,048:INFO:create_model() successfully completed......................................
2024-08-16 15:36:35,190:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:35,190:INFO:Creating metrics dataframe
2024-08-16 15:36:35,191:INFO:Initializing Gradient Boosting Classifier
2024-08-16 15:36:35,191:INFO:Total runtime is 0.2581769784291585 minutes
2024-08-16 15:36:35,191:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:35,192:INFO:Initializing create_model()
2024-08-16 15:36:35,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:35,192:INFO:Checking exceptions
2024-08-16 15:36:35,192:INFO:Importing libraries
2024-08-16 15:36:35,192:INFO:Copying training dataset
2024-08-16 15:36:35,481:INFO:Defining folds
2024-08-16 15:36:35,481:INFO:Declaring metric variables
2024-08-16 15:36:35,481:INFO:Importing untrained model
2024-08-16 15:36:35,482:INFO:Gradient Boosting Classifier Imported successfully
2024-08-16 15:36:35,482:INFO:Starting cross validation
2024-08-16 15:36:35,485:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:36,788:INFO:Calculating mean and std
2024-08-16 15:36:36,789:INFO:Creating metrics dataframe
2024-08-16 15:36:36,790:INFO:Uploading results into container
2024-08-16 15:36:36,790:INFO:Uploading model into container now
2024-08-16 15:36:36,790:INFO:_master_model_container: 10
2024-08-16 15:36:36,790:INFO:_display_container: 2
2024-08-16 15:36:36,791:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-16 15:36:36,791:INFO:create_model() successfully completed......................................
2024-08-16 15:36:36,930:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:36,930:INFO:Creating metrics dataframe
2024-08-16 15:36:36,932:INFO:Initializing Linear Discriminant Analysis
2024-08-16 15:36:36,932:INFO:Total runtime is 0.2871811668078104 minutes
2024-08-16 15:36:36,932:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:36,932:INFO:Initializing create_model()
2024-08-16 15:36:36,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:36,932:INFO:Checking exceptions
2024-08-16 15:36:36,932:INFO:Importing libraries
2024-08-16 15:36:36,932:INFO:Copying training dataset
2024-08-16 15:36:37,186:INFO:Defining folds
2024-08-16 15:36:37,186:INFO:Declaring metric variables
2024-08-16 15:36:37,186:INFO:Importing untrained model
2024-08-16 15:36:37,186:INFO:Linear Discriminant Analysis Imported successfully
2024-08-16 15:36:37,186:INFO:Starting cross validation
2024-08-16 15:36:37,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:37,965:INFO:Calculating mean and std
2024-08-16 15:36:37,965:INFO:Creating metrics dataframe
2024-08-16 15:36:37,967:INFO:Uploading results into container
2024-08-16 15:36:37,967:INFO:Uploading model into container now
2024-08-16 15:36:37,967:INFO:_master_model_container: 11
2024-08-16 15:36:37,967:INFO:_display_container: 2
2024-08-16 15:36:37,967:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-08-16 15:36:37,967:INFO:create_model() successfully completed......................................
2024-08-16 15:36:38,099:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:38,099:INFO:Creating metrics dataframe
2024-08-16 15:36:38,101:INFO:Initializing Extra Trees Classifier
2024-08-16 15:36:38,101:INFO:Total runtime is 0.30666493177413934 minutes
2024-08-16 15:36:38,101:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:38,101:INFO:Initializing create_model()
2024-08-16 15:36:38,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:38,101:INFO:Checking exceptions
2024-08-16 15:36:38,101:INFO:Importing libraries
2024-08-16 15:36:38,101:INFO:Copying training dataset
2024-08-16 15:36:38,354:INFO:Defining folds
2024-08-16 15:36:38,354:INFO:Declaring metric variables
2024-08-16 15:36:38,354:INFO:Importing untrained model
2024-08-16 15:36:38,355:INFO:Extra Trees Classifier Imported successfully
2024-08-16 15:36:38,355:INFO:Starting cross validation
2024-08-16 15:36:38,358:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:36:39,260:INFO:Calculating mean and std
2024-08-16 15:36:39,261:INFO:Creating metrics dataframe
2024-08-16 15:36:39,262:INFO:Uploading results into container
2024-08-16 15:36:39,263:INFO:Uploading model into container now
2024-08-16 15:36:39,263:INFO:_master_model_container: 12
2024-08-16 15:36:39,263:INFO:_display_container: 2
2024-08-16 15:36:39,263:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-16 15:36:39,263:INFO:create_model() successfully completed......................................
2024-08-16 15:36:39,406:INFO:SubProcess create_model() end ==================================
2024-08-16 15:36:39,406:INFO:Creating metrics dataframe
2024-08-16 15:36:39,408:INFO:Initializing Light Gradient Boosting Machine
2024-08-16 15:36:39,408:INFO:Total runtime is 0.3284483432769775 minutes
2024-08-16 15:36:39,408:INFO:SubProcess create_model() called ==================================
2024-08-16 15:36:39,408:INFO:Initializing create_model()
2024-08-16 15:36:39,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:36:39,408:INFO:Checking exceptions
2024-08-16 15:36:39,408:INFO:Importing libraries
2024-08-16 15:36:39,408:INFO:Copying training dataset
2024-08-16 15:36:39,674:INFO:Defining folds
2024-08-16 15:36:39,674:INFO:Declaring metric variables
2024-08-16 15:36:39,674:INFO:Importing untrained model
2024-08-16 15:36:39,674:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-16 15:36:39,674:INFO:Starting cross validation
2024-08-16 15:36:39,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:38:14,075:INFO:Calculating mean and std
2024-08-16 15:38:14,075:INFO:Creating metrics dataframe
2024-08-16 15:38:14,076:INFO:Uploading results into container
2024-08-16 15:38:14,077:INFO:Uploading model into container now
2024-08-16 15:38:14,077:INFO:_master_model_container: 13
2024-08-16 15:38:14,077:INFO:_display_container: 2
2024-08-16 15:38:14,077:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-16 15:38:14,077:INFO:create_model() successfully completed......................................
2024-08-16 15:38:14,211:INFO:SubProcess create_model() end ==================================
2024-08-16 15:38:14,211:INFO:Creating metrics dataframe
2024-08-16 15:38:14,212:INFO:Initializing Dummy Classifier
2024-08-16 15:38:14,212:INFO:Total runtime is 1.9085276603698729 minutes
2024-08-16 15:38:14,212:INFO:SubProcess create_model() called ==================================
2024-08-16 15:38:14,213:INFO:Initializing create_model()
2024-08-16 15:38:14,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a7ddeec50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:38:14,213:INFO:Checking exceptions
2024-08-16 15:38:14,213:INFO:Importing libraries
2024-08-16 15:38:14,213:INFO:Copying training dataset
2024-08-16 15:38:14,513:INFO:Defining folds
2024-08-16 15:38:14,513:INFO:Declaring metric variables
2024-08-16 15:38:14,513:INFO:Importing untrained model
2024-08-16 15:38:14,513:INFO:Dummy Classifier Imported successfully
2024-08-16 15:38:14,513:INFO:Starting cross validation
2024-08-16 15:38:14,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:38:15,667:INFO:Calculating mean and std
2024-08-16 15:38:15,668:INFO:Creating metrics dataframe
2024-08-16 15:38:15,669:INFO:Uploading results into container
2024-08-16 15:38:15,669:INFO:Uploading model into container now
2024-08-16 15:38:15,670:INFO:_master_model_container: 14
2024-08-16 15:38:15,670:INFO:_display_container: 2
2024-08-16 15:38:15,670:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-16 15:38:15,670:INFO:create_model() successfully completed......................................
2024-08-16 15:38:15,860:INFO:SubProcess create_model() end ==================================
2024-08-16 15:38:15,860:INFO:Creating metrics dataframe
2024-08-16 15:38:15,870:WARNING:/home/theop/.local/lib/python3.11/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-08-16 15:38:15,871:INFO:Initializing create_model()
2024-08-16 15:38:15,871:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:38:15,871:INFO:Checking exceptions
2024-08-16 15:38:15,872:INFO:Importing libraries
2024-08-16 15:38:15,872:INFO:Copying training dataset
2024-08-16 15:38:16,237:INFO:Defining folds
2024-08-16 15:38:16,237:INFO:Declaring metric variables
2024-08-16 15:38:16,237:INFO:Importing untrained model
2024-08-16 15:38:16,237:INFO:Declaring custom model
2024-08-16 15:38:16,238:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-16 15:38:16,241:INFO:Cross validation set to False
2024-08-16 15:38:16,241:INFO:Fitting Model
2024-08-16 15:38:16,379:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2024-08-16 15:38:16,387:INFO:[LightGBM] [Info] Number of positive: 37, number of negative: 35
2024-08-16 15:38:16,485:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.001469 seconds.
2024-08-16 15:38:16,485:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-08-16 15:38:16,489:INFO:[LightGBM] [Info] Total Bins 15464
2024-08-16 15:38:16,499:INFO:[LightGBM] [Info] Number of data points in the train set: 72, number of used features: 720
2024-08-16 15:38:16,507:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.513889 -> initscore=0.055570
2024-08-16 15:38:16,507:INFO:[LightGBM] [Info] Start training from score 0.055570
2024-08-16 15:38:16,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:16,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:16,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:16,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:16,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-08-16 15:38:17,293:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-16 15:38:17,293:INFO:create_model() successfully completed......................................
2024-08-16 15:38:17,505:INFO:_master_model_container: 14
2024-08-16 15:38:17,506:INFO:_display_container: 2
2024-08-16 15:38:17,506:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-16 15:38:17,506:INFO:compare_models() successfully completed......................................
2024-08-16 15:38:17,524:INFO:Initializing create_model()
2024-08-16 15:38:17,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:38:17,525:INFO:Checking exceptions
2024-08-16 15:38:17,526:INFO:Importing libraries
2024-08-16 15:38:17,526:INFO:Copying training dataset
2024-08-16 15:38:17,897:INFO:Defining folds
2024-08-16 15:38:17,897:INFO:Declaring metric variables
2024-08-16 15:38:17,897:INFO:Importing untrained model
2024-08-16 15:38:17,897:INFO:Random Forest Classifier Imported successfully
2024-08-16 15:38:17,898:INFO:Starting cross validation
2024-08-16 15:38:17,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:38:19,306:INFO:Calculating mean and std
2024-08-16 15:38:19,307:INFO:Creating metrics dataframe
2024-08-16 15:38:19,308:INFO:Finalizing model
2024-08-16 15:38:19,510:INFO:Uploading results into container
2024-08-16 15:38:19,510:INFO:Uploading model into container now
2024-08-16 15:38:19,516:INFO:_master_model_container: 15
2024-08-16 15:38:19,516:INFO:_display_container: 3
2024-08-16 15:38:19,516:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 15:38:19,516:INFO:create_model() successfully completed......................................
2024-08-16 15:38:46,419:INFO:Initializing tune_model()
2024-08-16 15:38:46,419:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 15:38:46,419:INFO:Checking exceptions
2024-08-16 15:38:46,475:INFO:Copying training dataset
2024-08-16 15:38:46,693:INFO:Checking base model
2024-08-16 15:38:46,693:INFO:Base model : Random Forest Classifier
2024-08-16 15:38:46,693:INFO:Declaring metric variables
2024-08-16 15:38:46,693:INFO:Defining Hyperparameters
2024-08-16 15:38:46,835:INFO:Tuning with n_jobs=-1
2024-08-16 15:38:46,835:INFO:Initializing RandomizedSearchCV
2024-08-16 15:38:55,995:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2024-08-16 15:38:55,995:INFO:Hyperparameter search completed
2024-08-16 15:38:55,995:INFO:SubProcess create_model() called ==================================
2024-08-16 15:38:55,996:INFO:Initializing create_model()
2024-08-16 15:38:55,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3a779199d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': True})
2024-08-16 15:38:55,996:INFO:Checking exceptions
2024-08-16 15:38:55,996:INFO:Importing libraries
2024-08-16 15:38:55,996:INFO:Copying training dataset
2024-08-16 15:38:56,260:INFO:Defining folds
2024-08-16 15:38:56,260:INFO:Declaring metric variables
2024-08-16 15:38:56,260:INFO:Importing untrained model
2024-08-16 15:38:56,260:INFO:Declaring custom model
2024-08-16 15:38:56,260:INFO:Random Forest Classifier Imported successfully
2024-08-16 15:38:56,261:INFO:Starting cross validation
2024-08-16 15:38:56,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:38:57,401:INFO:Calculating mean and std
2024-08-16 15:38:57,402:INFO:Creating metrics dataframe
2024-08-16 15:38:57,403:INFO:Finalizing model
2024-08-16 15:38:57,586:INFO:Uploading results into container
2024-08-16 15:38:57,586:INFO:Uploading model into container now
2024-08-16 15:38:57,586:INFO:_master_model_container: 16
2024-08-16 15:38:57,586:INFO:_display_container: 4
2024-08-16 15:38:57,587:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 15:38:57,587:INFO:create_model() successfully completed......................................
2024-08-16 15:38:57,731:INFO:SubProcess create_model() end ==================================
2024-08-16 15:38:57,731:INFO:choose_better activated
2024-08-16 15:38:57,731:INFO:SubProcess create_model() called ==================================
2024-08-16 15:38:57,732:INFO:Initializing create_model()
2024-08-16 15:38:57,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 15:38:57,732:INFO:Checking exceptions
2024-08-16 15:38:57,732:INFO:Importing libraries
2024-08-16 15:38:57,732:INFO:Copying training dataset
2024-08-16 15:38:57,997:INFO:Defining folds
2024-08-16 15:38:57,997:INFO:Declaring metric variables
2024-08-16 15:38:57,997:INFO:Importing untrained model
2024-08-16 15:38:57,997:INFO:Declaring custom model
2024-08-16 15:38:57,998:INFO:Random Forest Classifier Imported successfully
2024-08-16 15:38:57,998:INFO:Starting cross validation
2024-08-16 15:38:58,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 15:38:58,998:INFO:Calculating mean and std
2024-08-16 15:38:58,999:INFO:Creating metrics dataframe
2024-08-16 15:38:59,000:INFO:Finalizing model
2024-08-16 15:38:59,155:INFO:Uploading results into container
2024-08-16 15:38:59,156:INFO:Uploading model into container now
2024-08-16 15:38:59,156:INFO:_master_model_container: 17
2024-08-16 15:38:59,156:INFO:_display_container: 5
2024-08-16 15:38:59,156:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 15:38:59,156:INFO:create_model() successfully completed......................................
2024-08-16 15:38:59,301:INFO:SubProcess create_model() end ==================================
2024-08-16 15:38:59,302:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.7482
2024-08-16 15:38:59,302:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.9857
2024-08-16 15:38:59,302:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-08-16 15:38:59,302:INFO:choose_better completed
2024-08-16 15:38:59,307:INFO:_master_model_container: 17
2024-08-16 15:38:59,307:INFO:_display_container: 4
2024-08-16 15:38:59,307:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 15:38:59,307:INFO:tune_model() successfully completed......................................
2024-08-16 15:40:51,477:INFO:Initializing evaluate_model()
2024-08-16 15:40:51,477:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-08-16 15:40:51,636:INFO:Initializing plot_model()
2024-08-16 15:40:51,636:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3a7f271d90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-16 15:40:51,636:INFO:Checking exceptions
2024-08-16 15:40:51,846:INFO:Preloading libraries
2024-08-16 15:40:51,850:INFO:Copying training dataset
2024-08-16 15:40:51,850:INFO:Plot type: pipeline
2024-08-16 15:40:54,346:INFO:Visual Rendered Successfully
2024-08-16 15:40:54,494:INFO:plot_model() successfully completed......................................
2024-08-16 20:21:34,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:21:34,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:21:34,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:21:34,760:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:21:38,373:INFO:PyCaret ClassificationExperiment
2024-08-16 20:21:38,373:INFO:Logging name: clf-default-name
2024-08-16 20:21:38,373:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 20:21:38,373:INFO:version 3.3.2
2024-08-16 20:21:38,373:INFO:Initializing setup()
2024-08-16 20:21:38,373:INFO:self.USI: 7c29
2024-08-16 20:21:38,373:INFO:self._variable_keys: {'exp_id', 'gpu_param', 'logging_param', 'fold_generator', 'X', 'fold_groups_param', 'n_jobs_param', 'log_plots_param', 'y_test', '_ml_usecase', 'y_train', 'idx', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'X_train', 'memory', '_available_plots', 'fix_imbalance', 'data', 'pipeline', 'exp_name_log', 'seed', 'USI', 'X_test', 'gpu_n_jobs_param', 'target_param', 'y'}
2024-08-16 20:21:38,373:INFO:Checking environment
2024-08-16 20:21:38,373:INFO:python_version: 3.11.7
2024-08-16 20:21:38,373:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 20:21:38,373:INFO:machine: x86_64
2024-08-16 20:21:38,374:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 20:21:38,374:INFO:Memory: svmem(total=15531241472, available=12428730368, percent=20.0, used=2611425280, free=10647191552, active=679047168, inactive=3662135296, buffers=250232832, cached=2022391808, shared=160002048, slab=266747904)
2024-08-16 20:21:38,375:INFO:Physical Core: 8
2024-08-16 20:21:38,375:INFO:Logical Core: 16
2024-08-16 20:21:38,375:INFO:Checking libraries
2024-08-16 20:21:38,375:INFO:System:
2024-08-16 20:21:38,375:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 20:21:38,375:INFO:executable: /opt/anaconda/bin/python
2024-08-16 20:21:38,375:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 20:21:38,375:INFO:PyCaret required dependencies:
2024-08-16 20:21:38,572:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:38,727:INFO:                 pip: 23.3.1
2024-08-16 20:21:38,727:INFO:          setuptools: 68.2.2
2024-08-16 20:21:38,727:INFO:             pycaret: 3.3.2
2024-08-16 20:21:38,727:INFO:             IPython: 8.20.0
2024-08-16 20:21:38,727:INFO:          ipywidgets: 7.6.5
2024-08-16 20:21:38,727:INFO:                tqdm: 4.65.0
2024-08-16 20:21:38,727:INFO:               numpy: 1.26.4
2024-08-16 20:21:38,727:INFO:              pandas: 2.1.4
2024-08-16 20:21:38,727:INFO:              jinja2: 3.1.3
2024-08-16 20:21:38,727:INFO:               scipy: 1.11.4
2024-08-16 20:21:38,727:INFO:              joblib: 1.2.0
2024-08-16 20:21:38,727:INFO:             sklearn: 1.2.2
2024-08-16 20:21:38,727:INFO:                pyod: 2.0.1
2024-08-16 20:21:38,727:INFO:            imblearn: 0.11.0
2024-08-16 20:21:38,727:INFO:   category_encoders: 2.6.3
2024-08-16 20:21:38,727:INFO:            lightgbm: 4.5.0
2024-08-16 20:21:38,727:INFO:               numba: 0.59.0
2024-08-16 20:21:38,727:INFO:            requests: 2.31.0
2024-08-16 20:21:38,727:INFO:          matplotlib: 3.8.0
2024-08-16 20:21:38,727:INFO:          scikitplot: 0.3.7
2024-08-16 20:21:38,727:INFO:         yellowbrick: 1.5
2024-08-16 20:21:38,727:INFO:              plotly: 5.9.0
2024-08-16 20:21:38,727:INFO:    plotly-resampler: Not installed
2024-08-16 20:21:38,727:INFO:             kaleido: 0.2.1
2024-08-16 20:21:38,727:INFO:           schemdraw: 0.15
2024-08-16 20:21:38,727:INFO:         statsmodels: 0.14.0
2024-08-16 20:21:38,727:INFO:              sktime: 0.26.0
2024-08-16 20:21:38,727:INFO:               tbats: 1.1.3
2024-08-16 20:21:38,727:INFO:            pmdarima: 2.0.4
2024-08-16 20:21:38,727:INFO:              psutil: 5.9.0
2024-08-16 20:21:38,727:INFO:          markupsafe: 2.1.3
2024-08-16 20:21:38,727:INFO:             pickle5: Not installed
2024-08-16 20:21:38,727:INFO:         cloudpickle: 2.2.1
2024-08-16 20:21:38,727:INFO:         deprecation: 2.1.0
2024-08-16 20:21:38,727:INFO:              xxhash: 3.4.1
2024-08-16 20:21:38,727:INFO:           wurlitzer: 3.0.2
2024-08-16 20:21:38,727:INFO:PyCaret optional dependencies:
2024-08-16 20:21:38,735:INFO:                shap: 0.46.0
2024-08-16 20:21:38,736:INFO:           interpret: Not installed
2024-08-16 20:21:38,736:INFO:                umap: 0.1.1
2024-08-16 20:21:38,736:INFO:     ydata_profiling: Not installed
2024-08-16 20:21:38,736:INFO:  explainerdashboard: Not installed
2024-08-16 20:21:38,736:INFO:             autoviz: Not installed
2024-08-16 20:21:38,736:INFO:           fairlearn: Not installed
2024-08-16 20:21:38,736:INFO:          deepchecks: Not installed
2024-08-16 20:21:38,736:INFO:             xgboost: Not installed
2024-08-16 20:21:38,736:INFO:            catboost: Not installed
2024-08-16 20:21:38,736:INFO:              kmodes: Not installed
2024-08-16 20:21:38,736:INFO:             mlxtend: Not installed
2024-08-16 20:21:38,736:INFO:       statsforecast: Not installed
2024-08-16 20:21:38,736:INFO:        tune_sklearn: Not installed
2024-08-16 20:21:38,736:INFO:                 ray: Not installed
2024-08-16 20:21:38,736:INFO:            hyperopt: Not installed
2024-08-16 20:21:38,736:INFO:              optuna: Not installed
2024-08-16 20:21:38,736:INFO:               skopt: Not installed
2024-08-16 20:21:38,736:INFO:              mlflow: Not installed
2024-08-16 20:21:38,736:INFO:              gradio: Not installed
2024-08-16 20:21:38,736:INFO:             fastapi: Not installed
2024-08-16 20:21:38,736:INFO:             uvicorn: Not installed
2024-08-16 20:21:38,736:INFO:              m2cgen: Not installed
2024-08-16 20:21:38,736:INFO:           evidently: Not installed
2024-08-16 20:21:38,736:INFO:               fugue: Not installed
2024-08-16 20:21:38,736:INFO:           streamlit: 1.30.0
2024-08-16 20:21:38,736:INFO:             prophet: Not installed
2024-08-16 20:21:38,736:INFO:None
2024-08-16 20:21:38,736:INFO:Set up data.
2024-08-16 20:21:39,014:INFO:Set up folding strategy.
2024-08-16 20:21:39,014:INFO:Set up train/test split.
2024-08-16 20:21:39,240:INFO:Set up index.
2024-08-16 20:21:39,243:INFO:Assigning column types.
2024-08-16 20:21:39,473:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-16 20:21:39,499:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 20:21:39,508:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:21:39,528:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,528:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 20:21:39,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:21:39,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,570:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-16 20:21:39,597:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:21:39,613:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:21:39,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,655:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-16 20:21:39,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,740:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,740:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:39,748:INFO:Preparing preprocessing pipeline...
2024-08-16 20:21:39,768:INFO:Set up simple imputation.
2024-08-16 20:21:39,904:INFO:Set up column name cleaning.
2024-08-16 20:21:40,421:INFO:Finished creating preprocessing pipeline.
2024-08-16 20:21:40,439:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['index', 'UNKNOWN', 'k__Archaea',
                                             'k__Archaea|p__Euryarchaeota',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanobacteriales',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-08-16 20:21:40,439:INFO:Creating final display dataframe.
2024-08-16 20:21:43,050:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     Condition.MAM
2                   Target type            Binary
3           Original data shape       (103, 2230)
4        Transformed data shape       (103, 2230)
5   Transformed train set shape        (72, 2230)
6    Transformed test set shape        (31, 2230)
7              Numeric features              2229
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              7c29
2024-08-16 20:21:43,095:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:43,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:43,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:43,138:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:21:43,139:INFO:setup() successfully completed in 4.77s...............
2024-08-16 20:21:43,902:INFO:Initializing compare_models()
2024-08-16 20:21:43,902:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff3d5049f90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x7ff3d5049f90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-08-16 20:21:43,902:INFO:Checking exceptions
2024-08-16 20:21:44,112:INFO:Preparing display monitor
2024-08-16 20:21:44,114:INFO:Initializing Logistic Regression
2024-08-16 20:21:44,114:INFO:Total runtime is 8.54333241780599e-07 minutes
2024-08-16 20:21:44,114:INFO:SubProcess create_model() called ==================================
2024-08-16 20:21:44,114:INFO:Initializing create_model()
2024-08-16 20:21:44,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff3d5049f90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff3489b1990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:21:44,114:INFO:Checking exceptions
2024-08-16 20:21:44,114:INFO:Importing libraries
2024-08-16 20:21:44,114:INFO:Copying training dataset
2024-08-16 20:21:44,356:INFO:Defining folds
2024-08-16 20:21:44,356:INFO:Declaring metric variables
2024-08-16 20:21:44,356:INFO:Importing untrained model
2024-08-16 20:21:44,356:INFO:Logistic Regression Imported successfully
2024-08-16 20:21:44,356:INFO:Starting cross validation
2024-08-16 20:21:44,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:21:46,568:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:46,605:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:46,605:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:46,612:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:46,694:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:46,892:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:47,081:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:47,089:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:47,203:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:47,331:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:48,118:INFO:Calculating mean and std
2024-08-16 20:21:48,118:INFO:Creating metrics dataframe
2024-08-16 20:21:48,121:INFO:Uploading results into container
2024-08-16 20:21:48,121:INFO:Uploading model into container now
2024-08-16 20:21:48,121:INFO:_master_model_container: 1
2024-08-16 20:21:48,121:INFO:_display_container: 2
2024-08-16 20:21:48,122:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-16 20:21:48,122:INFO:create_model() successfully completed......................................
2024-08-16 20:21:48,540:INFO:SubProcess create_model() end ==================================
2024-08-16 20:21:48,540:INFO:Creating metrics dataframe
2024-08-16 20:21:48,543:INFO:Initializing K Neighbors Classifier
2024-08-16 20:21:48,543:INFO:Total runtime is 0.07381707429885864 minutes
2024-08-16 20:21:48,543:INFO:SubProcess create_model() called ==================================
2024-08-16 20:21:48,544:INFO:Initializing create_model()
2024-08-16 20:21:48,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff3d5049f90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff3489b1990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:21:48,544:INFO:Checking exceptions
2024-08-16 20:21:48,544:INFO:Importing libraries
2024-08-16 20:21:48,544:INFO:Copying training dataset
2024-08-16 20:21:49,179:INFO:Defining folds
2024-08-16 20:21:49,179:INFO:Declaring metric variables
2024-08-16 20:21:49,180:INFO:Importing untrained model
2024-08-16 20:21:49,180:INFO:K Neighbors Classifier Imported successfully
2024-08-16 20:21:49,180:INFO:Starting cross validation
2024-08-16 20:21:49,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:21:52,872:INFO:Initializing create_model()
2024-08-16 20:21:52,873:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff3d5049f90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:21:52,873:INFO:Checking exceptions
2024-08-16 20:21:52,874:INFO:Importing libraries
2024-08-16 20:21:52,874:INFO:Copying training dataset
2024-08-16 20:21:53,141:INFO:Defining folds
2024-08-16 20:21:53,141:INFO:Declaring metric variables
2024-08-16 20:21:53,142:INFO:Importing untrained model
2024-08-16 20:21:53,142:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:21:53,142:INFO:Starting cross validation
2024-08-16 20:21:53,145:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:21:55,249:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:55,254:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:55,276:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:55,471:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:55,706:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:55,799:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:55,817:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:56,092:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:56,149:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:56,317:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:21:57,239:INFO:Calculating mean and std
2024-08-16 20:21:57,239:INFO:Creating metrics dataframe
2024-08-16 20:21:57,241:INFO:Finalizing model
2024-08-16 20:21:57,558:INFO:Uploading results into container
2024-08-16 20:21:57,559:INFO:Uploading model into container now
2024-08-16 20:21:57,561:INFO:_master_model_container: 2
2024-08-16 20:21:57,561:INFO:_display_container: 2
2024-08-16 20:21:57,561:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:21:57,561:INFO:create_model() successfully completed......................................
2024-08-16 20:22:15,302:INFO:PyCaret ClassificationExperiment
2024-08-16 20:22:15,302:INFO:Logging name: clf-default-name
2024-08-16 20:22:15,302:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 20:22:15,302:INFO:version 3.3.2
2024-08-16 20:22:15,302:INFO:Initializing setup()
2024-08-16 20:22:15,302:INFO:self.USI: cd7d
2024-08-16 20:22:15,302:INFO:self._variable_keys: {'exp_id', 'gpu_param', 'logging_param', 'fold_generator', 'X', 'fold_groups_param', 'n_jobs_param', 'log_plots_param', 'y_test', '_ml_usecase', 'y_train', 'idx', 'html_param', 'is_multiclass', 'fold_shuffle_param', 'X_train', 'memory', '_available_plots', 'fix_imbalance', 'data', 'pipeline', 'exp_name_log', 'seed', 'USI', 'X_test', 'gpu_n_jobs_param', 'target_param', 'y'}
2024-08-16 20:22:15,302:INFO:Checking environment
2024-08-16 20:22:15,302:INFO:python_version: 3.11.7
2024-08-16 20:22:15,302:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 20:22:15,302:INFO:machine: x86_64
2024-08-16 20:22:15,302:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 20:22:15,302:INFO:Memory: svmem(total=15531241472, available=10388185088, percent=33.1, used=4649455616, free=8579313664, active=837693440, inactive=5545660416, buffers=251195392, cached=2051276800, shared=161525760, slab=277663744)
2024-08-16 20:22:15,302:INFO:Physical Core: 8
2024-08-16 20:22:15,302:INFO:Logical Core: 16
2024-08-16 20:22:15,302:INFO:Checking libraries
2024-08-16 20:22:15,302:INFO:System:
2024-08-16 20:22:15,302:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 20:22:15,303:INFO:executable: /opt/anaconda/bin/python
2024-08-16 20:22:15,303:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 20:22:15,303:INFO:PyCaret required dependencies:
2024-08-16 20:22:15,303:INFO:                 pip: 23.3.1
2024-08-16 20:22:15,303:INFO:          setuptools: 68.2.2
2024-08-16 20:22:15,303:INFO:             pycaret: 3.3.2
2024-08-16 20:22:15,303:INFO:             IPython: 8.20.0
2024-08-16 20:22:15,303:INFO:          ipywidgets: 7.6.5
2024-08-16 20:22:15,303:INFO:                tqdm: 4.65.0
2024-08-16 20:22:15,303:INFO:               numpy: 1.26.4
2024-08-16 20:22:15,303:INFO:              pandas: 2.1.4
2024-08-16 20:22:15,303:INFO:              jinja2: 3.1.3
2024-08-16 20:22:15,303:INFO:               scipy: 1.11.4
2024-08-16 20:22:15,303:INFO:              joblib: 1.2.0
2024-08-16 20:22:15,303:INFO:             sklearn: 1.2.2
2024-08-16 20:22:15,303:INFO:                pyod: 2.0.1
2024-08-16 20:22:15,303:INFO:            imblearn: 0.11.0
2024-08-16 20:22:15,303:INFO:   category_encoders: 2.6.3
2024-08-16 20:22:15,303:INFO:            lightgbm: 4.5.0
2024-08-16 20:22:15,303:INFO:               numba: 0.59.0
2024-08-16 20:22:15,303:INFO:            requests: 2.31.0
2024-08-16 20:22:15,303:INFO:          matplotlib: 3.8.0
2024-08-16 20:22:15,303:INFO:          scikitplot: 0.3.7
2024-08-16 20:22:15,303:INFO:         yellowbrick: 1.5
2024-08-16 20:22:15,303:INFO:              plotly: 5.9.0
2024-08-16 20:22:15,303:INFO:    plotly-resampler: Not installed
2024-08-16 20:22:15,303:INFO:             kaleido: 0.2.1
2024-08-16 20:22:15,303:INFO:           schemdraw: 0.15
2024-08-16 20:22:15,303:INFO:         statsmodels: 0.14.0
2024-08-16 20:22:15,303:INFO:              sktime: 0.26.0
2024-08-16 20:22:15,303:INFO:               tbats: 1.1.3
2024-08-16 20:22:15,303:INFO:            pmdarima: 2.0.4
2024-08-16 20:22:15,303:INFO:              psutil: 5.9.0
2024-08-16 20:22:15,303:INFO:          markupsafe: 2.1.3
2024-08-16 20:22:15,303:INFO:             pickle5: Not installed
2024-08-16 20:22:15,303:INFO:         cloudpickle: 2.2.1
2024-08-16 20:22:15,303:INFO:         deprecation: 2.1.0
2024-08-16 20:22:15,303:INFO:              xxhash: 3.4.1
2024-08-16 20:22:15,303:INFO:           wurlitzer: 3.0.2
2024-08-16 20:22:15,303:INFO:PyCaret optional dependencies:
2024-08-16 20:22:15,303:INFO:                shap: 0.46.0
2024-08-16 20:22:15,303:INFO:           interpret: Not installed
2024-08-16 20:22:15,303:INFO:                umap: 0.1.1
2024-08-16 20:22:15,303:INFO:     ydata_profiling: Not installed
2024-08-16 20:22:15,303:INFO:  explainerdashboard: Not installed
2024-08-16 20:22:15,303:INFO:             autoviz: Not installed
2024-08-16 20:22:15,303:INFO:           fairlearn: Not installed
2024-08-16 20:22:15,303:INFO:          deepchecks: Not installed
2024-08-16 20:22:15,303:INFO:             xgboost: Not installed
2024-08-16 20:22:15,303:INFO:            catboost: Not installed
2024-08-16 20:22:15,303:INFO:              kmodes: Not installed
2024-08-16 20:22:15,303:INFO:             mlxtend: Not installed
2024-08-16 20:22:15,303:INFO:       statsforecast: Not installed
2024-08-16 20:22:15,303:INFO:        tune_sklearn: Not installed
2024-08-16 20:22:15,303:INFO:                 ray: Not installed
2024-08-16 20:22:15,303:INFO:            hyperopt: Not installed
2024-08-16 20:22:15,303:INFO:              optuna: Not installed
2024-08-16 20:22:15,303:INFO:               skopt: Not installed
2024-08-16 20:22:15,303:INFO:              mlflow: Not installed
2024-08-16 20:22:15,303:INFO:              gradio: Not installed
2024-08-16 20:22:15,303:INFO:             fastapi: Not installed
2024-08-16 20:22:15,303:INFO:             uvicorn: Not installed
2024-08-16 20:22:15,303:INFO:              m2cgen: Not installed
2024-08-16 20:22:15,303:INFO:           evidently: Not installed
2024-08-16 20:22:15,303:INFO:               fugue: Not installed
2024-08-16 20:22:15,303:INFO:           streamlit: 1.30.0
2024-08-16 20:22:15,303:INFO:             prophet: Not installed
2024-08-16 20:22:15,303:INFO:None
2024-08-16 20:22:15,303:INFO:Set up data.
2024-08-16 20:22:15,463:INFO:Set up folding strategy.
2024-08-16 20:22:15,463:INFO:Set up train/test split.
2024-08-16 20:22:15,707:INFO:Set up index.
2024-08-16 20:22:15,710:INFO:Assigning column types.
2024-08-16 20:22:15,971:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-16 20:22:15,998:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 20:22:15,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:22:16,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,041:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 20:22:16,042:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:22:16,058:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,058:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,058:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-16 20:22:16,085:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:22:16,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,129:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:22:16,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,145:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-16 20:22:16,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,233:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:16,233:INFO:Preparing preprocessing pipeline...
2024-08-16 20:22:16,251:INFO:Set up simple imputation.
2024-08-16 20:22:16,400:INFO:Set up column name cleaning.
2024-08-16 20:22:17,295:INFO:Finished creating preprocessing pipeline.
2024-08-16 20:22:17,305:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['UNKNOWN', 'k__Archaea',
                                             'k__Archaea|p__Euryarchaeota',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanobacteriales',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanob...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-08-16 20:22:17,305:INFO:Creating final display dataframe.
2024-08-16 20:22:19,419:WARNING:/home/theop/.local/lib/python3.11/site-packages/pycaret/internal/pipeline.py:289: UserWarning: Persisting input arguments took 0.56s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_full_transform(

2024-08-16 20:22:20,174:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     Condition.MAM
2                   Target type            Binary
3           Original data shape       (103, 2229)
4        Transformed data shape       (103, 2229)
5   Transformed train set shape        (72, 2229)
6    Transformed test set shape        (31, 2229)
7              Numeric features              2228
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              cd7d
2024-08-16 20:22:20,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:20,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:20,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:20,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:22:20,264:INFO:setup() successfully completed in 4.96s...............
2024-08-16 20:22:25,511:INFO:Initializing create_model()
2024-08-16 20:22:25,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:22:25,511:INFO:Checking exceptions
2024-08-16 20:22:25,512:INFO:Importing libraries
2024-08-16 20:22:25,512:INFO:Copying training dataset
2024-08-16 20:22:25,777:INFO:Defining folds
2024-08-16 20:22:25,777:INFO:Declaring metric variables
2024-08-16 20:22:25,777:INFO:Importing untrained model
2024-08-16 20:22:25,777:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:22:25,777:INFO:Starting cross validation
2024-08-16 20:22:25,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:22:27,461:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:22:27,564:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:22:27,617:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:22:27,634:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:22:27,641:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:22:27,748:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:22:28,495:INFO:Calculating mean and std
2024-08-16 20:22:28,495:INFO:Creating metrics dataframe
2024-08-16 20:22:28,497:INFO:Finalizing model
2024-08-16 20:22:28,663:INFO:Uploading results into container
2024-08-16 20:22:28,663:INFO:Uploading model into container now
2024-08-16 20:22:28,665:INFO:_master_model_container: 1
2024-08-16 20:22:28,665:INFO:_display_container: 2
2024-08-16 20:22:28,665:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:22:28,665:INFO:create_model() successfully completed......................................
2024-08-16 20:22:47,325:INFO:Initializing tune_model()
2024-08-16 20:22:47,325:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 20:22:47,325:INFO:Checking exceptions
2024-08-16 20:22:47,406:INFO:Copying training dataset
2024-08-16 20:22:47,622:INFO:Checking base model
2024-08-16 20:22:47,622:INFO:Base model : Random Forest Classifier
2024-08-16 20:22:47,623:INFO:Declaring metric variables
2024-08-16 20:22:47,623:INFO:Defining Hyperparameters
2024-08-16 20:22:47,758:INFO:Tuning with n_jobs=-1
2024-08-16 20:22:47,758:INFO:Initializing RandomizedSearchCV
2024-08-16 20:22:59,162:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2024-08-16 20:22:59,162:INFO:Hyperparameter search completed
2024-08-16 20:22:59,162:INFO:SubProcess create_model() called ==================================
2024-08-16 20:22:59,162:INFO:Initializing create_model()
2024-08-16 20:22:59,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7ff3c84e7510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': True})
2024-08-16 20:22:59,162:INFO:Checking exceptions
2024-08-16 20:22:59,162:INFO:Importing libraries
2024-08-16 20:22:59,162:INFO:Copying training dataset
2024-08-16 20:22:59,431:INFO:Defining folds
2024-08-16 20:22:59,431:INFO:Declaring metric variables
2024-08-16 20:22:59,431:INFO:Importing untrained model
2024-08-16 20:22:59,431:INFO:Declaring custom model
2024-08-16 20:22:59,432:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:22:59,432:INFO:Starting cross validation
2024-08-16 20:22:59,435:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:23:00,907:INFO:Calculating mean and std
2024-08-16 20:23:00,908:INFO:Creating metrics dataframe
2024-08-16 20:23:00,909:INFO:Finalizing model
2024-08-16 20:23:01,104:INFO:Uploading results into container
2024-08-16 20:23:01,105:INFO:Uploading model into container now
2024-08-16 20:23:01,105:INFO:_master_model_container: 2
2024-08-16 20:23:01,105:INFO:_display_container: 3
2024-08-16 20:23:01,105:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:23:01,105:INFO:create_model() successfully completed......................................
2024-08-16 20:23:01,247:INFO:SubProcess create_model() end ==================================
2024-08-16 20:23:01,247:INFO:choose_better activated
2024-08-16 20:23:01,247:INFO:SubProcess create_model() called ==================================
2024-08-16 20:23:01,247:INFO:Initializing create_model()
2024-08-16 20:23:01,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:23:01,247:INFO:Checking exceptions
2024-08-16 20:23:01,248:INFO:Importing libraries
2024-08-16 20:23:01,248:INFO:Copying training dataset
2024-08-16 20:23:01,510:INFO:Defining folds
2024-08-16 20:23:01,510:INFO:Declaring metric variables
2024-08-16 20:23:01,510:INFO:Importing untrained model
2024-08-16 20:23:01,510:INFO:Declaring custom model
2024-08-16 20:23:01,510:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:23:01,510:INFO:Starting cross validation
2024-08-16 20:23:01,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:23:02,503:INFO:Calculating mean and std
2024-08-16 20:23:02,503:INFO:Creating metrics dataframe
2024-08-16 20:23:02,504:INFO:Finalizing model
2024-08-16 20:23:02,676:INFO:Uploading results into container
2024-08-16 20:23:02,676:INFO:Uploading model into container now
2024-08-16 20:23:02,676:INFO:_master_model_container: 3
2024-08-16 20:23:02,676:INFO:_display_container: 4
2024-08-16 20:23:02,676:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:23:02,676:INFO:create_model() successfully completed......................................
2024-08-16 20:23:02,825:INFO:SubProcess create_model() end ==================================
2024-08-16 20:23:02,826:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.5714
2024-08-16 20:23:02,826:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.7071
2024-08-16 20:23:02,827:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-08-16 20:23:02,827:INFO:choose_better completed
2024-08-16 20:23:02,829:INFO:_master_model_container: 3
2024-08-16 20:23:02,829:INFO:_display_container: 3
2024-08-16 20:23:02,829:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:23:02,829:INFO:tune_model() successfully completed......................................
2024-08-16 20:23:07,854:INFO:Initializing evaluate_model()
2024-08-16 20:23:07,854:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-08-16 20:23:08,019:INFO:Initializing plot_model()
2024-08-16 20:23:08,019:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-16 20:23:08,019:INFO:Checking exceptions
2024-08-16 20:23:08,232:INFO:Preloading libraries
2024-08-16 20:23:08,236:INFO:Copying training dataset
2024-08-16 20:23:08,236:INFO:Plot type: pipeline
2024-08-16 20:23:09,675:INFO:Visual Rendered Successfully
2024-08-16 20:23:09,828:INFO:plot_model() successfully completed......................................
2024-08-16 20:23:15,085:INFO:Initializing plot_model()
2024-08-16 20:23:15,085:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-16 20:23:15,086:INFO:Checking exceptions
2024-08-16 20:23:15,153:INFO:Preloading libraries
2024-08-16 20:23:15,156:INFO:Copying training dataset
2024-08-16 20:23:15,156:INFO:Plot type: auc
2024-08-16 20:23:16,598:INFO:Fitting Model
2024-08-16 20:23:16,598:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-08-16 20:23:16,598:INFO:Scoring test/hold-out set
2024-08-16 20:25:36,924:INFO:Visual Rendered Successfully
2024-08-16 20:25:37,065:INFO:plot_model() successfully completed......................................
2024-08-16 20:26:42,682:INFO:Initializing plot_model()
2024-08-16 20:26:42,682:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-16 20:26:42,683:INFO:Checking exceptions
2024-08-16 20:26:42,761:INFO:Preloading libraries
2024-08-16 20:26:42,764:INFO:Copying training dataset
2024-08-16 20:26:42,764:INFO:Plot type: auc
2024-08-16 20:26:44,225:INFO:Fitting Model
2024-08-16 20:26:44,225:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-08-16 20:26:44,225:INFO:Scoring test/hold-out set
2024-08-16 20:26:46,042:INFO:Visual Rendered Successfully
2024-08-16 20:26:46,185:INFO:plot_model() successfully completed......................................
2024-08-16 20:28:02,821:INFO:Initializing plot_model()
2024-08-16 20:28:02,821:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-16 20:28:02,821:INFO:Checking exceptions
2024-08-16 20:28:02,888:INFO:Preloading libraries
2024-08-16 20:28:02,892:INFO:Copying training dataset
2024-08-16 20:28:02,892:INFO:Plot type: auc
2024-08-16 20:28:04,499:INFO:Fitting Model
2024-08-16 20:28:04,499:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-08-16 20:28:04,500:INFO:Scoring test/hold-out set
2024-08-16 20:28:05,158:INFO:Visual Rendered Successfully
2024-08-16 20:28:05,333:INFO:plot_model() successfully completed......................................
2024-08-16 20:36:09,427:INFO:Initializing plot_model()
2024-08-16 20:36:09,427:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7ff344f9f990>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-16 20:36:09,427:INFO:Checking exceptions
2024-08-16 20:36:09,491:INFO:Preloading libraries
2024-08-16 20:36:09,494:INFO:Copying training dataset
2024-08-16 20:36:09,494:INFO:Plot type: auc
2024-08-16 20:36:10,970:INFO:Fitting Model
2024-08-16 20:36:10,971:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-08-16 20:36:10,971:INFO:Scoring test/hold-out set
2024-08-16 20:36:13,688:INFO:Visual Rendered Successfully
2024-08-16 20:36:13,833:INFO:plot_model() successfully completed......................................
2024-08-16 20:36:29,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:36:29,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:36:29,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:36:29,710:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-16 20:36:29,958:INFO:PyCaret ClassificationExperiment
2024-08-16 20:36:29,959:INFO:Logging name: clf-default-name
2024-08-16 20:36:29,959:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-16 20:36:29,959:INFO:version 3.3.2
2024-08-16 20:36:29,959:INFO:Initializing setup()
2024-08-16 20:36:29,959:INFO:self.USI: 8b6c
2024-08-16 20:36:29,959:INFO:self._variable_keys: {'fold_shuffle_param', 'X_train', 'html_param', 'X_test', 'fold_generator', 'n_jobs_param', '_ml_usecase', 'gpu_param', 'logging_param', '_available_plots', 'memory', 'data', 'USI', 'log_plots_param', 'gpu_n_jobs_param', 'seed', 'exp_id', 'X', 'exp_name_log', 'y_test', 'fold_groups_param', 'y_train', 'idx', 'is_multiclass', 'target_param', 'fix_imbalance', 'pipeline', 'y'}
2024-08-16 20:36:29,959:INFO:Checking environment
2024-08-16 20:36:29,959:INFO:python_version: 3.11.7
2024-08-16 20:36:29,959:INFO:python_build: ('main', 'Dec 15 2023 18:12:31')
2024-08-16 20:36:29,959:INFO:machine: x86_64
2024-08-16 20:36:29,960:INFO:platform: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 20:36:29,960:INFO:Memory: svmem(total=15531241472, available=11123851264, percent=28.4, used=3844431872, free=9188208640, active=906334208, inactive=4792209408, buffers=261533696, cached=2237067264, shared=228257792, slab=286052352)
2024-08-16 20:36:29,960:INFO:Physical Core: 8
2024-08-16 20:36:29,961:INFO:Logical Core: 16
2024-08-16 20:36:29,961:INFO:Checking libraries
2024-08-16 20:36:29,961:INFO:System:
2024-08-16 20:36:29,961:INFO:    python: 3.11.7 (main, Dec 15 2023, 18:12:31) [GCC 11.2.0]
2024-08-16 20:36:29,961:INFO:executable: /opt/anaconda/bin/python
2024-08-16 20:36:29,961:INFO:   machine: Linux-5.15.164-1-MANJARO-x86_64-with-glibc2.40
2024-08-16 20:36:29,961:INFO:PyCaret required dependencies:
2024-08-16 20:36:30,112:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:30,232:INFO:                 pip: 23.3.1
2024-08-16 20:36:30,232:INFO:          setuptools: 68.2.2
2024-08-16 20:36:30,232:INFO:             pycaret: 3.3.2
2024-08-16 20:36:30,232:INFO:             IPython: 8.20.0
2024-08-16 20:36:30,232:INFO:          ipywidgets: 7.6.5
2024-08-16 20:36:30,232:INFO:                tqdm: 4.65.0
2024-08-16 20:36:30,232:INFO:               numpy: 1.26.4
2024-08-16 20:36:30,232:INFO:              pandas: 2.1.4
2024-08-16 20:36:30,232:INFO:              jinja2: 3.1.3
2024-08-16 20:36:30,232:INFO:               scipy: 1.11.4
2024-08-16 20:36:30,232:INFO:              joblib: 1.2.0
2024-08-16 20:36:30,232:INFO:             sklearn: 1.2.2
2024-08-16 20:36:30,232:INFO:                pyod: 2.0.1
2024-08-16 20:36:30,232:INFO:            imblearn: 0.11.0
2024-08-16 20:36:30,232:INFO:   category_encoders: 2.6.3
2024-08-16 20:36:30,232:INFO:            lightgbm: 4.5.0
2024-08-16 20:36:30,232:INFO:               numba: 0.59.0
2024-08-16 20:36:30,232:INFO:            requests: 2.31.0
2024-08-16 20:36:30,232:INFO:          matplotlib: 3.8.0
2024-08-16 20:36:30,232:INFO:          scikitplot: 0.3.7
2024-08-16 20:36:30,232:INFO:         yellowbrick: 1.5
2024-08-16 20:36:30,232:INFO:              plotly: 5.9.0
2024-08-16 20:36:30,232:INFO:    plotly-resampler: Not installed
2024-08-16 20:36:30,232:INFO:             kaleido: 0.2.1
2024-08-16 20:36:30,232:INFO:           schemdraw: 0.15
2024-08-16 20:36:30,232:INFO:         statsmodels: 0.14.0
2024-08-16 20:36:30,232:INFO:              sktime: 0.26.0
2024-08-16 20:36:30,232:INFO:               tbats: 1.1.3
2024-08-16 20:36:30,232:INFO:            pmdarima: 2.0.4
2024-08-16 20:36:30,232:INFO:              psutil: 5.9.0
2024-08-16 20:36:30,232:INFO:          markupsafe: 2.1.3
2024-08-16 20:36:30,232:INFO:             pickle5: Not installed
2024-08-16 20:36:30,232:INFO:         cloudpickle: 2.2.1
2024-08-16 20:36:30,232:INFO:         deprecation: 2.1.0
2024-08-16 20:36:30,232:INFO:              xxhash: 3.4.1
2024-08-16 20:36:30,232:INFO:           wurlitzer: 3.0.2
2024-08-16 20:36:30,232:INFO:PyCaret optional dependencies:
2024-08-16 20:36:30,240:INFO:                shap: 0.46.0
2024-08-16 20:36:30,240:INFO:           interpret: Not installed
2024-08-16 20:36:30,240:INFO:                umap: 0.1.1
2024-08-16 20:36:30,240:INFO:     ydata_profiling: Not installed
2024-08-16 20:36:30,240:INFO:  explainerdashboard: Not installed
2024-08-16 20:36:30,240:INFO:             autoviz: Not installed
2024-08-16 20:36:30,240:INFO:           fairlearn: Not installed
2024-08-16 20:36:30,240:INFO:          deepchecks: Not installed
2024-08-16 20:36:30,240:INFO:             xgboost: Not installed
2024-08-16 20:36:30,240:INFO:            catboost: Not installed
2024-08-16 20:36:30,240:INFO:              kmodes: Not installed
2024-08-16 20:36:30,240:INFO:             mlxtend: Not installed
2024-08-16 20:36:30,240:INFO:       statsforecast: Not installed
2024-08-16 20:36:30,240:INFO:        tune_sklearn: Not installed
2024-08-16 20:36:30,240:INFO:                 ray: Not installed
2024-08-16 20:36:30,240:INFO:            hyperopt: Not installed
2024-08-16 20:36:30,240:INFO:              optuna: Not installed
2024-08-16 20:36:30,241:INFO:               skopt: Not installed
2024-08-16 20:36:30,241:INFO:              mlflow: Not installed
2024-08-16 20:36:30,241:INFO:              gradio: Not installed
2024-08-16 20:36:30,241:INFO:             fastapi: Not installed
2024-08-16 20:36:30,241:INFO:             uvicorn: Not installed
2024-08-16 20:36:30,241:INFO:              m2cgen: Not installed
2024-08-16 20:36:30,241:INFO:           evidently: Not installed
2024-08-16 20:36:30,241:INFO:               fugue: Not installed
2024-08-16 20:36:30,241:INFO:           streamlit: 1.30.0
2024-08-16 20:36:30,241:INFO:             prophet: Not installed
2024-08-16 20:36:30,241:INFO:None
2024-08-16 20:36:30,241:INFO:Set up data.
2024-08-16 20:36:30,525:INFO:Set up folding strategy.
2024-08-16 20:36:30,525:INFO:Set up train/test split.
2024-08-16 20:36:30,741:INFO:Set up index.
2024-08-16 20:36:30,743:INFO:Assigning column types.
2024-08-16 20:36:30,986:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-16 20:36:31,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 20:36:31,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:36:31,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,061:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-16 20:36:31,061:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:36:31,078:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,078:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-16 20:36:31,105:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:36:31,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-16 20:36:31,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,166:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-16 20:36:31,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:31,256:INFO:Preparing preprocessing pipeline...
2024-08-16 20:36:31,274:INFO:Set up simple imputation.
2024-08-16 20:36:31,404:INFO:Set up column name cleaning.
2024-08-16 20:36:31,877:INFO:Finished creating preprocessing pipeline.
2024-08-16 20:36:31,887:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['UNKNOWN', 'k__Archaea',
                                             'k__Archaea|p__Euryarchaeota',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanobacteriales',
                                             'k__Archaea|p__Euryarchaeota|c__Methanobacteria|o__Methanob...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-08-16 20:36:31,887:INFO:Creating final display dataframe.
2024-08-16 20:36:33,305:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     Condition.MAM
2                   Target type            Binary
3           Original data shape       (103, 2229)
4        Transformed data shape       (103, 2229)
5   Transformed train set shape        (72, 2229)
6    Transformed test set shape        (31, 2229)
7              Numeric features              2228
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              8b6c
2024-08-16 20:36:33,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:33,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:33,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:33,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-16 20:36:33,395:INFO:setup() successfully completed in 3.44s...............
2024-08-16 20:36:33,415:INFO:Initializing create_model()
2024-08-16 20:36:33,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:36:33,415:INFO:Checking exceptions
2024-08-16 20:36:33,416:INFO:Importing libraries
2024-08-16 20:36:33,416:INFO:Copying training dataset
2024-08-16 20:36:33,663:INFO:Defining folds
2024-08-16 20:36:33,663:INFO:Declaring metric variables
2024-08-16 20:36:33,663:INFO:Importing untrained model
2024-08-16 20:36:33,663:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:36:33,664:INFO:Starting cross validation
2024-08-16 20:36:33,667:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:36:35,734:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:35,758:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:35,780:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:35,841:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:35,892:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:36,012:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:36,333:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:36,355:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:36,382:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:36,657:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:37,463:INFO:Calculating mean and std
2024-08-16 20:36:37,464:INFO:Creating metrics dataframe
2024-08-16 20:36:37,466:INFO:Finalizing model
2024-08-16 20:36:37,773:INFO:Uploading results into container
2024-08-16 20:36:37,773:INFO:Uploading model into container now
2024-08-16 20:36:37,778:INFO:_master_model_container: 1
2024-08-16 20:36:37,778:INFO:_display_container: 2
2024-08-16 20:36:37,779:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:36:37,779:INFO:create_model() successfully completed......................................
2024-08-16 20:36:37,917:INFO:Initializing tune_model()
2024-08-16 20:36:37,917:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2024-08-16 20:36:37,917:INFO:Checking exceptions
2024-08-16 20:36:37,998:INFO:Copying training dataset
2024-08-16 20:36:38,202:INFO:Checking base model
2024-08-16 20:36:38,202:INFO:Base model : Random Forest Classifier
2024-08-16 20:36:38,202:INFO:Declaring metric variables
2024-08-16 20:36:38,202:INFO:Defining Hyperparameters
2024-08-16 20:36:38,329:INFO:Tuning with n_jobs=-1
2024-08-16 20:36:38,329:INFO:Initializing RandomizedSearchCV
2024-08-16 20:36:40,747:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:40,819:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:40,841:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:41,094:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:41,102:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:41,124:WARNING:/home/theop/.local/lib/python3.11/site-packages/dask/dataframe/__init__.py:42: FutureWarning: 
Dask dataframe query planning is disabled because dask-expr is not installed.

You can install it with `pip install dask[dataframe]` or `conda install dask`.
This will raise in a future version.

  warnings.warn(msg, FutureWarning)

2024-08-16 20:36:51,573:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2024-08-16 20:36:51,573:INFO:Hyperparameter search completed
2024-08-16 20:36:51,573:INFO:SubProcess create_model() called ==================================
2024-08-16 20:36:51,574:INFO:Initializing create_model()
2024-08-16 20:36:51,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcc611f6d50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': True})
2024-08-16 20:36:51,574:INFO:Checking exceptions
2024-08-16 20:36:51,574:INFO:Importing libraries
2024-08-16 20:36:51,574:INFO:Copying training dataset
2024-08-16 20:36:51,837:INFO:Defining folds
2024-08-16 20:36:51,837:INFO:Declaring metric variables
2024-08-16 20:36:51,837:INFO:Importing untrained model
2024-08-16 20:36:51,837:INFO:Declaring custom model
2024-08-16 20:36:51,838:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:36:51,838:INFO:Starting cross validation
2024-08-16 20:36:51,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:36:53,468:INFO:Calculating mean and std
2024-08-16 20:36:53,469:INFO:Creating metrics dataframe
2024-08-16 20:36:53,470:INFO:Finalizing model
2024-08-16 20:36:53,788:INFO:Uploading results into container
2024-08-16 20:36:53,789:INFO:Uploading model into container now
2024-08-16 20:36:53,789:INFO:_master_model_container: 2
2024-08-16 20:36:53,789:INFO:_display_container: 3
2024-08-16 20:36:53,789:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:36:53,789:INFO:create_model() successfully completed......................................
2024-08-16 20:36:53,923:INFO:SubProcess create_model() end ==================================
2024-08-16 20:36:53,924:INFO:choose_better activated
2024-08-16 20:36:53,924:INFO:SubProcess create_model() called ==================================
2024-08-16 20:36:53,924:INFO:Initializing create_model()
2024-08-16 20:36:53,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-16 20:36:53,924:INFO:Checking exceptions
2024-08-16 20:36:53,925:INFO:Importing libraries
2024-08-16 20:36:53,925:INFO:Copying training dataset
2024-08-16 20:36:54,198:INFO:Defining folds
2024-08-16 20:36:54,198:INFO:Declaring metric variables
2024-08-16 20:36:54,198:INFO:Importing untrained model
2024-08-16 20:36:54,198:INFO:Declaring custom model
2024-08-16 20:36:54,199:INFO:Random Forest Classifier Imported successfully
2024-08-16 20:36:54,199:INFO:Starting cross validation
2024-08-16 20:36:54,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-16 20:36:55,210:INFO:Calculating mean and std
2024-08-16 20:36:55,210:INFO:Creating metrics dataframe
2024-08-16 20:36:55,212:INFO:Finalizing model
2024-08-16 20:36:55,383:INFO:Uploading results into container
2024-08-16 20:36:55,383:INFO:Uploading model into container now
2024-08-16 20:36:55,384:INFO:_master_model_container: 3
2024-08-16 20:36:55,384:INFO:_display_container: 4
2024-08-16 20:36:55,384:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:36:55,384:INFO:create_model() successfully completed......................................
2024-08-16 20:36:55,551:INFO:SubProcess create_model() end ==================================
2024-08-16 20:36:55,551:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.5714
2024-08-16 20:36:55,551:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.7071
2024-08-16 20:36:55,552:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2024-08-16 20:36:55,552:INFO:choose_better completed
2024-08-16 20:36:55,557:INFO:_master_model_container: 3
2024-08-16 20:36:55,557:INFO:_display_container: 3
2024-08-16 20:36:55,557:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-16 20:36:55,557:INFO:tune_model() successfully completed......................................
2024-08-16 20:36:55,771:INFO:Initializing evaluate_model()
2024-08-16 20:36:55,771:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-08-16 20:36:55,904:INFO:Initializing plot_model()
2024-08-16 20:36:55,904:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-08-16 20:36:55,904:INFO:Checking exceptions
2024-08-16 20:36:56,131:INFO:Preloading libraries
2024-08-16 20:36:56,136:INFO:Copying training dataset
2024-08-16 20:36:56,136:INFO:Plot type: pipeline
2024-08-16 20:36:57,440:INFO:Visual Rendered Successfully
2024-08-16 20:36:57,689:INFO:plot_model() successfully completed......................................
2024-08-16 20:37:01,969:INFO:Initializing plot_model()
2024-08-16 20:37:01,969:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcceafb3250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-08-16 20:37:01,969:INFO:Checking exceptions
2024-08-16 20:37:02,031:INFO:Preloading libraries
2024-08-16 20:37:02,034:INFO:Copying training dataset
2024-08-16 20:37:02,034:INFO:Plot type: auc
2024-08-16 20:37:03,584:INFO:Fitting Model
2024-08-16 20:37:03,584:WARNING:/home/theop/.local/lib/python3.11/site-packages/sklearn/base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2024-08-16 20:37:03,584:INFO:Scoring test/hold-out set
2024-08-16 20:38:48,526:INFO:Visual Rendered Successfully
2024-08-16 20:38:48,661:INFO:plot_model() successfully completed......................................
